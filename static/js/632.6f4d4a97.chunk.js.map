{"version":3,"file":"static/js/632.6f4d4a97.chunk.js","mappings":"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","sources":["img/edit.svg","webpack://my-app/./src/Components/MessagesPage/MessagesMain.module.css?8bf6","img/send.svg","img/done-contact.svg","state/editMessage.js","img/delete-white.svg","Components/MessagesPage/functions/requestEditMess.js","Components/MessagesPage/functions/requestDeleteMess.js","Components/MessagesPage/SendMessages.js","Components/MessagesPage/MessagesField.js","Components/MessagesPage/functions/requestSendMess.js","Components/MessagesPage/MessagesMain.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#5C5E6F\",\n    d: \"M9 39h2.2l22.15-22.15-2.2-2.2L9 36.8Zm30.7-24.3-6.4-6.4 2.1-2.1q.85-.85 2.1-.85t2.1.85l2.2 2.2q.85.85.85 2.1t-.85 2.1Zm-2.1 2.1L12.4 42H6v-6.4l25.2-25.2Zm-5.35-1.05-1.1-1.1 2.2 2.2Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.666b6fca3a40a0415e39054d202d0667.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"MessagesMain_header__gyXjV\",\"or\":\"MessagesMain_or__gDiaB\",\"user\":\"MessagesMain_user__vt9ir\",\"userImg\":\"MessagesMain_userImg__Uymz5\",\"name\":\"MessagesMain_name__QaHl5\",\"online\":\"MessagesMain_online__DBvTX\",\"dots\":\"MessagesMain_dots__UX7jV\",\"container\":\"MessagesMain_container__cD2F3\",\"input\":\"MessagesMain_input__d6B4b\",\"send\":\"MessagesMain_send__ZzvKE\",\"textArea\":\"MessagesMain_textArea__HjRA3\",\"messages\":\"MessagesMain_messages__ZntrM\",\"empty\":\"MessagesMain_empty__Ag3Af\",\"messagesMe\":\"MessagesMain_messagesMe__WjIpQ\",\"messagesFriend\":\"MessagesMain_messagesFriend__Pq9Bt\",\"messageContainerMe\":\"MessagesMain_messageContainerMe__NFH-m\",\"messageContainerFriend\":\"MessagesMain_messageContainerFriend__beKEZ\",\"dateMe\":\"MessagesMain_dateMe__D1Z0C\",\"dateFriend\":\"MessagesMain_dateFriend__0z4na\",\"dateMessages\":\"MessagesMain_dateMessages__LCLfE\",\"deletedInput\":\"MessagesMain_deletedInput__uqx2Z\",\"back\":\"MessagesMain_back__taqhX\",\"photoSender\":\"MessagesMain_photoSender__tUHlE\",\"imgSenderBlock\":\"MessagesMain_imgSenderBlock__1oOkb\",\"infoSender\":\"MessagesMain_infoSender__8ZLTV\",\"desactiveName\":\"MessagesMain_desactiveName__WqChr\",\"nameSender\":\"MessagesMain_nameSender__giQUt\",\"nameSenderText\":\"MessagesMain_nameSenderText__VwNcD\",\"editIcon\":\"MessagesMain_editIcon__L3X9s\",\"deleteMess\":\"MessagesMain_deleteMess__Z5bh-\"};","var _defs, _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#ffffff\",\n    id: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:none;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"send--alt--filled\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"_Transparent_Rectangle_\",\n    \"data-name\": \"<Transparent Rectangle>\",\n    className: \"cls-1\",\n    width: 32,\n    height: 32\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.e6e41f470c70eedfe79bcc21222a7720.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDoneContact(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E2FFFF\",\n    d: \"M18.9 35.7 7.7 24.5l2.15-2.15 9.05 9.05 19.2-19.2 2.15 2.15Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDoneContact);\nexport default __webpack_public_path__ + \"static/media/done-contact.96f5b1f550c1b8a0775fd1a00afe598b.svg\";\nexport { ForwardRef as ReactComponent };","export const initialEditMessage = {\r\n    modal:false,\r\n    editMess: {},\r\n    editText: ''\r\n}\r\n\r\n\r\nexport function initEditMessage (initialEditMessage){\r\n    return { \r\n        ...initialEditMessage\r\n    }\r\n}\r\n\r\n\r\nexport function reducerEditMessage(state, action){\r\n    switch(action.type){\r\n        case 'modal':\r\n            return{\r\n                ...state, \r\n                modal: action.payload\r\n            }\r\n        case 'editMess':\r\n            return{\r\n                ...state, \r\n                editMess: action.payload\r\n            }\r\n        case 'editText': \r\n            return{\r\n                ...state,\r\n                editText: action.payload\r\n            }\r\n        case 'init':\r\n            return initEditMessage(action.payload)\r\n    }\r\n}\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDeleteWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E2FFFF\",\n    d: \"M13.05 42q-1.25 0-2.125-.875T10.05 39V10.5H8v-3h9.4V6h13.2v1.5H40v3h-2.05V39q0 1.2-.9 2.1-.9.9-2.1.9Zm21.9-31.5h-21.9V39h21.9Zm-16.6 24.2h3V14.75h-3Zm8.3 0h3V14.75h-3Zm-13.6-24.2V39Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteWhite);\nexport default __webpack_public_path__ + \"static/media/delete-white.775e9dd618f07a57d467dfc4059b0335.svg\";\nexport { ForwardRef as ReactComponent };","import { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { editMessage } from \"../../../store/messagesSlice\";\r\nimport { editLastMessageGroup } from \"../../../store/groupSlice\";\r\nimport { editLastMessageFriend } from \"../../../store/friendSlice\";\r\n\r\n\r\n\r\nexport async function requestEditMess(db, chatId, infoChat, messageId, dispatch, messageText, myInfo){\r\n\r\n    const docSnap = await getDoc(doc(db, 'chats', chatId));\r\n    if (docSnap.exists()){\r\n        const array = docSnap.data().messages;\r\n        const updatedArray = array.map((element) =>{\r\n            if (element.id === messageId) {\r\n                dispatch(editMessage({chatId, messageId, messageText}))\r\n                return { ...element, messageText: messageText };\r\n            }else{\r\n                return element;\r\n            }\r\n        })\r\n\r\n        await updateDoc(doc(db, 'chats', chatId), { messages: updatedArray });\r\n    }\r\n\r\n\r\n    if(infoChat.users){\r\n        const usersArr = Object.entries(infoChat.users)\r\n        usersArr.map(async el =>{\r\n            if(el[1].deleted === false ){\r\n                await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                    [`${infoChat.id}.lastMessage.messageText`]: messageText \r\n                })\r\n                const lastMessages = messageText\r\n                const combinedId = infoChat.id\r\n                dispatch(editLastMessageGroup({combinedId, lastMessages}))\r\n\r\n            }\r\n        })\r\n    }else{\r\n        await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n            [`${infoChat.id}.lastMessage.messageText`]: messageText \r\n        })\r\n        await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n            [`${infoChat.id}.lastMessage.messageText`] :messageText\r\n        })\r\n        const lastMessages = messageText\r\n        const combinedId = infoChat.id\r\n        dispatch(editLastMessageFriend({combinedId, lastMessages}))\r\n\r\n    }\r\n\r\n\r\n}","import { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { editLastMessageGroup } from \"../../../store/groupSlice\";\r\nimport { editLastMessageFriend } from \"../../../store/friendSlice\";\r\n\r\n\r\nexport async function requestDeleteMess(chatId, messageId, db, dispatch, infoChat, messagesState, myInfo){\r\n\r\n    const docSnapChats = await getDoc(doc(db, 'chats', chatId));\r\n    if (docSnapChats.exists()){\r\n        const array = docSnapChats.data().messages;\r\n        const updatedArray = array.findIndex((element) => element.id === messageId)\r\n        array.splice(updatedArray, 1)\r\n        await updateDoc(doc(db, 'chats', chatId), { messages: array });\r\n    }\r\n\r\n\r\n    const messageStateChat = messagesState.find(el => el.chatId === infoChat.id)\r\n    const newLastMessage = messageStateChat.messages.length >= 2 ? messageStateChat.messages[messageStateChat.messages.length - 2].text : \"No messages\"\r\n    if(messageStateChat.messages[messageStateChat.messages.length - 1].messageId === messageId){\r\n        \r\n        if(infoChat.users){\r\n            const usersArr = Object.entries(infoChat.users)\r\n            usersArr.map(async el =>{\r\n                if(el[1].deleted === false ){\r\n                    await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                        [`${infoChat.id}.lastMessage.messageText`]: newLastMessage \r\n                    })\r\n                    const lastMessages = newLastMessage\r\n                    const combinedId = infoChat.id\r\n                    dispatch(editLastMessageGroup({combinedId, lastMessages}))\r\n                }\r\n            })\r\n        }else{\r\n            await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                [`${infoChat.id}.lastMessage.messageText`]: newLastMessage \r\n            })\r\n            await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                [`${infoChat.id}.lastMessage.messageText`] :newLastMessage \r\n            })\r\n            const lastMessages = newLastMessage \r\n            const combinedId = infoChat.id\r\n            dispatch(editLastMessageFriend({combinedId, lastMessages}))\r\n        }\r\n        \r\n    }\r\n}","import { doc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport send from '../../img/send.svg';\r\nimport style from './MessagesMain.module.css';\r\nimport done from '../../img/done-contact.svg'\r\nimport { deleteMessageStore } from '../../store/messagesSlice';\r\nimport { initialEditMessage } from '../../state/editMessage';\r\nimport deleteMess from '../../img/delete-white.svg'\r\nimport classNames from \"classnames\"\r\nimport { requestEditMess } from './functions/requestEditMess';\r\nimport { requestDeleteMess } from './functions/requestDeleteMess';\r\n\r\n\r\n\r\n\r\nexport function SendMessages({stateEditMess, setSizeWindow, sendMess, text, setMessageText, handleEvent, innerRef, infoChat}) {\r\n    const myInfo = useSelector(state => state.user)\r\n    const messagesState = useSelector(state => state.message.messages)\r\n    const db = getFirestore()\r\n    const textAreaEdit = useRef()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() =>{\r\n        window.addEventListener(\"resize\", keyboardDidShow )\r\n        function keyboardDidShow() {\r\n            const newHeight = window.visualViewport.height;\r\n            setSizeWindow(newHeight)\r\n        }\r\n        return () =>{\r\n            keyboardDidShow()\r\n        }\r\n    }, [])\r\n\r\n    const delViewMess = async () => {\r\n        try{\r\n            await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                [`${infoChat.id}.viewMessage.newMessView`] :true\r\n                \r\n            })\r\n\r\n            if(infoChat.users ){\r\n                const usersGroup = Object.entries(infoChat.users)\r\n                usersGroup.map( async el => {\r\n                    if(el[1].deleted === false && el[0] !== myInfo.id){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                        })\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                })\r\n            }\r\n            \r\n        } catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        const textArea = textAreaEdit.current\r\n        if(textArea){\r\n            textArea.focus()\r\n        }\r\n\r\n    },[stateEditMess[0].modal])\r\n\r\n\r\n    const setEditMess = async () =>{\r\n        const messageText = stateEditMess[0].editText\r\n        const chatId = infoChat.id\r\n        const messageId = stateEditMess[0].editMess.messageId\r\n\r\n        if(infoChat.lastMessages === messageText || messageText.trim() === ''){\r\n            stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n            \r\n        }else{\r\n\r\n            requestEditMess(db, chatId, infoChat, messageId, dispatch, messageText, myInfo)\r\n            \r\n            stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const deleteMessage = async () =>{\r\n        const chatId = infoChat.id\r\n        const messageId = stateEditMess[0].editMess.messageId\r\n        const userId = myInfo.id\r\n\r\n        dispatch(deleteMessageStore({chatId, messageId, userId}))\r\n\r\n        requestDeleteMess(chatId, messageId, db, dispatch, infoChat, messagesState, myInfo)\r\n        \r\n        stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n\r\n    } \r\n\r\n\r\n\r\n    return (\r\n        <section className={style.textArea} ref={innerRef}>\r\n            {stateEditMess[0].modal ? \r\n            <>\r\n            <textarea onChange={(e) => stateEditMess[1]({type:'editText', payload:e.target.value})} ref={textAreaEdit} value={stateEditMess[0].editText} onKeyDown={handleEvent} name=\"messages\" id='textareaEdit' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => deleteMessage()} className={classNames(style.send, style.deleteMess)}>\r\n                <img src={deleteMess} alt=\"delete message\" />\r\n            </button>\r\n            <button onClick={() => setEditMess()} className={style.send}>\r\n                <img src={done} alt=\"accept\" />\r\n            </button>\r\n            </>\r\n            :\r\n            <>\r\n            <textarea onClick={() => delViewMess()} placeholder='Enter your message' onKeyDown={handleEvent} value={text} onChange={(e) => setMessageText(e.target.value)} name=\"messages\" id='textarea' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => sendMess()} type='submit' className={style.send}>\r\n                <img src={send} alt=\"Send\" />\r\n            </button>\r\n            </>\r\n            }\r\n\r\n        </section>\r\n    )\r\n}","import classNames from \"classnames\"\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMessage, deleteMessageStore, editMessage, updateNameMessages, updatePhotoMessages } from \"../../store/messagesSlice\";\r\nimport { Empty } from \"../Empty/Empty\";\r\nimport style from './MessagesMain.module.css'\r\nimport img from '../../img/user-M.png'\r\n\r\n\r\n\r\nexport function MessagesField({ setSizeWindow, infoChat, scrollRef, stateEditMess }) {\r\n    const messagesState = useSelector(state => state.message.messages)\r\n    const user = useSelector(state => state.user)\r\n    const findChat = messagesState.find(el => el.chatId === infoChat.id)\r\n    const db = getFirestore()\r\n    const dispatch = useDispatch()\r\n    const dayArr = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n\r\n    useEffect(() => {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }, [messagesState])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", setSizeWindow(window.visualViewport.height));\r\n\r\n        return () => window.addEventListener(\"resize\", setSizeWindow(window.visualViewport.height));\r\n    }, [messagesState, window.innerHeight])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, 'chats', infoChat.id), (doc) => {\r\n            if (doc.data()) {\r\n                const data = doc.data()\r\n                const chatId = infoChat.id\r\n\r\n                if(findChat && findChat.messages){\r\n                    if(data.messages.length < findChat.messages.length){\r\n                        for(let i = 0; i < findChat.messages.length; i++){\r\n                            if(data.messages[i] === undefined || data.messages.length < findChat.messages.length){\r\n                                const messageId = findChat.messages[i].messageId\r\n                                dispatch(deleteMessageStore({chatId,messageId}))\r\n                                \r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                data.messages.map(el => {\r\n                    const userId = el.userId\r\n                    const messageText = el.messageText\r\n                    const messageId = el.id\r\n                    const date = el.date\r\n                    const photo = el.photo \r\n                    const name = el.name \r\n                    const dayMess = dayArr[date.toDate().getDay()]\r\n                    const hoursMess = date.toDate().getHours()\r\n                    let minute = date.toDate().getMinutes().toString()\r\n                    if (minute.length === 1) {\r\n                        minute = `0${minute}`\r\n                    }\r\n                    const datePush = `${dayMess} ${hoursMess}:${minute}`\r\n\r\n                    if (findChat && findChat.messages) {\r\n                        const userMess = findChat.messages.find(el => el.messageId === messageId)\r\n                        if(userMess !== undefined && userMess.photo !== undefined && photo !== undefined){\r\n                            if (userMess.photo !== photo) {\r\n                                dispatch(updatePhotoMessages({ messageId, chatId, photo }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && userMess.name !== undefined && name !== undefined){\r\n                            if (userMess.name !== name) {\r\n                                dispatch(updateNameMessages({ messageId, chatId, name }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && messageText !== undefined && userMess.text !== undefined){\r\n                            if(userMess.text !== messageText){\r\n                                dispatch(editMessage({chatId, messageId, messageText}))\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch(addMessage({ name, chatId, userId, messageText, datePush, messageId, photo }))\r\n                })\r\n                \r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [findChat])\r\n\r\n   \r\n    \r\n    const addInfoEdit = (idMess, chat) =>{\r\n        const key = idMess\r\n        const infoChat = chat\r\n        const editMess = infoChat.messages.find(el => el.messageId === key)\r\n        if(editMess){\r\n            stateEditMess[1]({type:'modal', payload:true}) \r\n            stateEditMess[1]({type:'editMess', payload:editMess})\r\n            stateEditMess[1]({type:'editText', payload:editMess.text})\r\n        }\r\n    }\r\n\r\n    return (\r\n        (messagesState.length > 0 && findChat && findChat.messages.length > 0 ? (findChat.messages.map(el => (\r\n            el.userId === user.id ? (\r\n                <div key={el.messageId} className={style.messageContainerMe}>\r\n                    <span onClick={() => {\r\n                    addInfoEdit(el.messageId, findChat)\r\n                    }} className={classNames(\"message\", style.messagesMe)}>\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateMe)}>{el.date}</span>\r\n\r\n                    </span>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                            <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            ):(\r\n                <div key={el.messageId} className={style.messageContainerFriend}>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                        </span>\r\n                        <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                    </span>\r\n                    <span className={classNames(\"message\", style.messagesFriend)}>\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateFriend)}>{el.date}</span>\r\n                    </span>\r\n\r\n                </div>\r\n            )\r\n        ))): (\r\n            <Empty text={'No Messages'}></Empty>\r\n        ))\r\n    );\r\n}\r\n\r\n\r\n","import { Timestamp, arrayUnion, doc, getDoc, serverTimestamp, updateDoc } from 'firebase/firestore';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nexport async function requestSendMess(db, infoChat, messageText, user){\r\n\r\n    const messageId = uuid()\r\n    const date = Timestamp.now()\r\n\r\n    await updateDoc(doc(db, 'chats', infoChat.id), {\r\n\r\n        messages: arrayUnion({\r\n            id: messageId,\r\n            messageText,\r\n            userId: user.id,\r\n            date: date,\r\n            photo: user.photo,\r\n            name:user.name,\r\n            deleted:false\r\n        })\r\n    })\r\n\r\n    await updateDoc(doc(db, 'chatsList', user.id), {\r\n        [infoChat.id + '.lastMessage']: {\r\n            messageText\r\n        },\r\n        [infoChat.id + '.date']: serverTimestamp(),\r\n        [infoChat.id + '.viewMessage']:{\r\n            newMessView: true,\r\n            idSender:user.id,\r\n            viewMess:false\r\n        }\r\n\r\n    })\r\n\r\n    if(infoChat.users){\r\n        for(const key in infoChat.users){\r\n            const res = await getDoc(doc(db, 'chatsList', key))\r\n            if (res.exists()) {\r\n                await updateDoc(doc(db, 'chatsList', key), {\r\n                    [infoChat.id + '.lastMessage']: {\r\n                        messageText\r\n                    },\r\n                    [infoChat.id + '.date']: serverTimestamp(),\r\n                    [infoChat.id + '.viewMessage']:{\r\n                        newMessView: false,\r\n                        idSender:user.id,\r\n                        viewMess:false\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        \r\n    }else{\r\n        const res = await getDoc(doc(db, 'chatsList', infoChat.friendId))\r\n        if (res.exists()) {\r\n            await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                [infoChat.id + '.lastMessage']: {\r\n                    messageText\r\n                },\r\n                [infoChat.id + '.date']: serverTimestamp(),\r\n                [infoChat.id + '.viewMessage']:{\r\n                    newMessView: false,\r\n                    idSender:user.id,\r\n                    viewMess:false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport style from './MessagesMain.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useReducer, useRef, useState } from 'react';\r\nimport { SendMessages } from './SendMessages';\r\nimport { doc, getFirestore, onSnapshot } from 'firebase/firestore';\r\nimport img from '../../img/user-M.png'\r\nimport { useEffect } from 'react';\r\nimport { updatePhotoName, viewMessage } from '../../store/friendSlice';\r\nimport back from '../../img/back-dark.svg'\r\nimport { deletedUser, viewMessageGroup } from '../../store/groupSlice';\r\nimport { MessagesField } from './MessagesField';\r\nimport { initialStateGroup, reducerGroup } from '../../state/group';\r\nimport edit from '../../img/edit.svg'\r\nimport { initialEditMessage, reducerEditMessage } from '../../state/editMessage';\r\nimport { requestSendMess } from './functions/requestSendMess';\r\n\r\n\r\nexport default function MessagesMain() {\r\n    const friend = useSelector(state => state.friend.friend)\r\n    const group = useSelector(state => state.group.group)\r\n    const user = useSelector(state => state.user)\r\n    const navigate = useNavigate()\r\n\r\n    const nameRef = useRef();\r\n    const scrollRef = useRef();\r\n    const footerRef = useRef();\r\n\r\n    const db = getFirestore()\r\n\r\n    const [link] = Object.values(useParams())\r\n    const infoChat = friend.find(el => el.id === link) ? friend.find(el => el.id === link) : group.find(el => el.id === link)\r\n\r\n    const dispatch = useDispatch()\r\n    const [stateGroup, dispatchStateGroup] = useReducer(reducerGroup, initialStateGroup)\r\n    const [editMessage, dispatchEditMessage] = useReducer(reducerEditMessage, initialEditMessage)\r\n\r\n    const [sizeWindow, setSizeWindow] = useState(window.visualViewport.height)\r\n    const [deletedAcc, setDeletedAcc] = useState(false)\r\n    const [text, setMessageText] = useState('');\r\n\r\n    const sendMess = async () => {\r\n        const messageText = text\r\n        setMessageText('')\r\n\r\n        if (messageText !== '') {\r\n\r\n            requestSendMess(db, infoChat, messageText, user)\r\n        \r\n        }\r\n\r\n    }\r\n\r\n    const handleEvent = (e) => {\r\n\r\n        if (e.code === 'Enter' && e.ctrlKey === false && e.shiftKey === false) {\r\n            e.preventDefault()\r\n            sendMess()\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", user.id), (doc) => {\r\n            \r\n            const data = doc.data() ?  Object.entries(doc.data()) : false\r\n            if (data) {\r\n\r\n                const findChat = data.find(el => el[0] === infoChat.id)                    \r\n                const viewMess = findChat && findChat[1].viewMessage\r\n                const view = viewMess && viewMess.viewMess \r\n                const idSender = viewMess && viewMess.idSender \r\n                const newMess = viewMess && viewMess.newMessView\r\n                if (findChat && findChat[1].chat) {\r\n                    const combinedId = findChat[0]\r\n                    const name = findChat[1].name ? findChat[1].name.name : ''\r\n                    const photo = findChat[1].photo.photo\r\n\r\n\r\n                    if (findChat[1].deleted.deleted ) {\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(true)\r\n                        return\r\n                    } else {\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(false)\r\n                    }\r\n\r\n                    dispatch(viewMessage({newMess, view,combinedId,idSender}))\r\n                }else if(findChat && findChat[1].group){\r\n                    const combinedId = findChat[0]\r\n                    const usersArr = Object.entries(findChat[1].group.users)\r\n                    const users = findChat[1].group.users\r\n                    const infoUsers = Object.entries(infoChat.users)\r\n                \r\n                    for(let i = 0; i < usersArr.length; i++){\r\n                        if(usersArr[i][1].deleted !== infoUsers[i][1].deleted){\r\n                            dispatch(deletedUser({combinedId, users}))\r\n                        }\r\n\r\n                        if(usersArr[i][1].admin && usersArr[i][1].id === user.id){\r\n                            dispatchStateGroup({type: 'admin', payload: true})\r\n                        }\r\n                    }\r\n                    dispatch(viewMessageGroup({newMess, view,combinedId,idSender}))\r\n                }\r\n            }\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [infoChat])\r\n\r\n    useEffect(()=>{\r\n        if (scrollRef.current !== null) {\r\n            const nameHeight = nameRef.current.offsetHeight\r\n            const footerHeight = footerRef.current.offsetHeight\r\n            const windowHeight = window.visualViewport.height\r\n\r\n            const sum = nameHeight + footerHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            scrollRef.current.style.height = `${res}px`\r\n            scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n        }\r\n\r\n    }, [sizeWindow])\r\n\r\n\r\n\r\n    return (\r\n        <section className={style.messagesSec}>\r\n            <div className={classNames(style.container, 'container')}>\r\n                <header className={style.header} ref={nameRef}>\r\n                    <div className={style.user}>\r\n                        {stateGroup.admin && \r\n                        <Link state={infoChat} to='/edit-group'>\r\n                            <img className={style.editIcon} src={edit} alt=\"edit\" />\r\n                        </Link>}\r\n                        <div className={style.userImg}>\r\n                            <img src={infoChat.photo !== null ? infoChat.photo : img} alt=\"User\" />\r\n                        </div>\r\n                        <div className={style.about}>\r\n                            <h2 className={style.name}>\r\n                                {infoChat.name}\r\n                            </h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div onClick={() => {navigate('/')}} className={style.back}>\r\n                        <img src={back} alt=\"back\" />\r\n                    </div>\r\n                </header>\r\n\r\n                <section ref={scrollRef} id='scroll' className={editMessage.modal ? classNames(style.noScroll, style.messages) : style.messages}>\r\n                    <MessagesField stateEditMess={[editMessage, dispatchEditMessage]} setSizeWindow={setSizeWindow} scrollRef={scrollRef} infoChat={infoChat}></MessagesField>\r\n                    \r\n                </section>\r\n                {deletedAcc\r\n                    ?\r\n                    <div ref={footerRef} className={classNames(style.deletedInput)}>Account has been deleted</div>\r\n                    :\r\n                    <SendMessages stateEditMess={[editMessage, dispatchEditMessage]} infoChat={infoChat} scrollRef={scrollRef} setSizeWindow={setSizeWindow}  innerRef={footerRef} handleEvent={handleEvent} sendMess={sendMess} text={text} setMessageText={setMessageText} />\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}"],"names":["initialEditMessage","modal","editMess","editText","reducerEditMessage","state","action","type","payload","initEditMessage","requestEditMess","db","chatId","infoChat","messageId","dispatch","messageText","myInfo","getDoc","doc","docSnap","exists","array","data","messages","updatedArray","map","element","id","editMessage","updateDoc","users","Object","entries","el","deleted","lastMessages","combinedId","editLastMessageGroup","friendId","editLastMessageFriend","requestDeleteMess","messagesState","docSnapChats","findIndex","splice","messageStateChat","find","newLastMessage","length","text","SendMessages","stateEditMess","setSizeWindow","sendMess","setMessageText","handleEvent","innerRef","useSelector","user","message","getFirestore","textAreaEdit","useRef","useDispatch","useEffect","keyboardDidShow","newHeight","window","visualViewport","height","addEventListener","delViewMess","console","error","textArea","current","focus","setEditMess","trim","deleteMessage","userId","deleteMessageStore","className","style","ref","onChange","e","target","value","onKeyDown","name","rows","onClick","classNames","src","deleteMess","alt","done","placeholder","send","MessagesField","scrollRef","findChat","dayArr","scrollTop","scrollHeight","innerHeight","unsub","onSnapshot","i","undefined","date","photo","dayMess","toDate","getDay","hoursMess","getHours","minute","getMinutes","toString","datePush","userMess","updatePhotoMessages","updateNameMessages","addMessage","idMess","chat","key","addInfoEdit","img","Empty","requestSendMess","uuid","Timestamp","arrayUnion","serverTimestamp","newMessView","idSender","viewMess","MessagesMain","friend","group","navigate","useNavigate","nameRef","footerRef","values","useParams","link","useReducer","reducerGroup","initialStateGroup","stateGroup","dispatchStateGroup","dispatchEditMessage","useState","sizeWindow","deletedAcc","setDeletedAcc","viewMessage","view","newMess","updatePhotoName","usersArr","infoUsers","deletedUser","admin","viewMessageGroup","nameHeight","offsetHeight","footerHeight","res","to","edit","back","code","ctrlKey","shiftKey","preventDefault"],"sourceRoot":""}