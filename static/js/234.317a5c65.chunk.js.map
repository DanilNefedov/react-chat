{"version":3,"file":"static/js/234.317a5c65.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/HomePage/Friends.module.css?e856","Components/Search/Search.js","Components/HomePage/Friends.js","webpack://my-app/./src/Components/Search/Search.module.css?a5fe"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Friends_head__z9KAn\",\"header\":\"Friends_header__2vtis\",\"dots\":\"Friends_dots__hKwNl\",\"friends\":\"Friends_friends__RuUv0\",\"container\":\"Friends_container__Ji6-h\",\"searchFriends\":\"Friends_searchFriends__o9ewN\",\"containerFriendsList\":\"Friends_containerFriendsList__ZbZT9\",\"scrollMessages\":\"Friends_scrollMessages__a2NvB\",\"emptyBlock\":\"Friends_emptyBlock__ZwYFc\"};","import search from '../../img/search.svg';\r\nimport style from './Search.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addFrined } from '../../store/friendSlice';\r\n// import { SearchList } from './SearchList'\r\nimport { doc, getDoc, getFirestore, serverTimestamp, setDoc, updateDoc } from 'firebase/firestore';\r\nimport { Empty } from '../Empty/Empty';\r\nimport { Suspense, useEffect, useRef, useState } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ModuleError } from '../ModuleError/ModuleError';\r\nimport classNames from 'classnames';\r\nimport { Loader } from '../Loader/Loader';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst SearchList = React.lazy(() => import('./SearchList'))\r\n\r\n\r\nexport function Search({ propsErr, user, handleSubmit, text, setText, handleEvent, searchListRef, searchRef }) {\r\n\r\n    const [moduleErr, setModuleErr] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const db = getFirestore()\r\n\r\n    const friend = useSelector(state => state.friend.friend)\r\n\r\n    const myInfo = useSelector(state => state.user)\r\n\r\n\r\n\r\n    const bindChat = async (el) => {\r\n\r\n        const name = el.name;\r\n        const id = el.id;\r\n        const photo = el.photoURL\r\n        const combinedId = myInfo.id > id ? myInfo.id + id : id + myInfo.id\r\n        const find = friend.find(el => el.id === combinedId)\r\n\r\n\r\n        try {\r\n\r\n\r\n            if (!find) {\r\n                const friendId = id\r\n                dispatch(addFrined({ combinedId, name, friendId, photo }))\r\n            }\r\n\r\n            const res = await getDoc(doc(db, 'chats', combinedId))\r\n\r\n\r\n\r\n            if (!res.exists()) {\r\n\r\n                await setDoc(doc(db, 'chats', combinedId), { messages: [] })\r\n\r\n                await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                    [combinedId + '.userInfo']: {\r\n                        id: id,\r\n                        displayName: name,\r\n                        photo: photo\r\n                    },\r\n                    [combinedId + '.date']: serverTimestamp()\r\n                })\r\n\r\n                await updateDoc(doc(db, 'chatsList', id), {\r\n                    [combinedId + '.userInfo']: {\r\n                        id: myInfo.id,\r\n                        displayName: myInfo.name,\r\n                        photo: myInfo.photo\r\n                    },\r\n                    [combinedId + '.date']: serverTimestamp()\r\n                })\r\n            }\r\n\r\n\r\n            setModuleErr(false)\r\n\r\n        } catch (error) {\r\n            setModuleErr(true)\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const context = useOutletContext()\r\n\r\n    const containerSearch = useRef()\r\n    function resize() {\r\n        console.log()\r\n        if (containerSearch.current !== null && containerSearch.current !== undefined) {\r\n            const searchHeight = searchRef.current.offsetHeight\r\n            const navigationRefHeight = context.navRef.current.offsetHeight\r\n            const windowHeight = window.innerHeight\r\n\r\n            const sum = searchHeight + navigationRefHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            containerSearch.current.style.height = `${res}px`\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        resize()\r\n        window.addEventListener(\"onload\", resize);\r\n        return () => window.addEventListener(\"resize\", resize);\r\n    }, [user])\r\n\r\n    return (\r\n        <div className={classNames(style.container, \"container\")}>\r\n            <section ref={searchRef} className={style.search} id=\"search\">\r\n                <div className={style.cont}>\r\n                    <input className={classNames(style.searchIcon)} onKeyDown={handleEvent} value={text} onChange={(e) => setText(e.target.value)} type=\"text\" id={style.searchIcon} placeholder=\"Find friend\" />\r\n                    <button type='submit' onClick={handleSubmit} className={style.loupe} htmlFor=\"search-icon\"><img src={search} alt=\"Search\" /></button>\r\n\r\n                </div>\r\n\r\n            </section>\r\n            <section ref={searchListRef} className={style.searchList} id=\"search-list\">\r\n\r\n                {(user.length === 0) ? (\r\n                    <div className={style.empty}>Search list is empty</div>\r\n                ) : (\r\n                    <div ref={containerSearch} className={classNames(style.containerSearchList, \"container-search-list\")}>\r\n                        <Suspense fallback={<Loader></Loader>}>\r\n                            <SearchList user={user} clickChat={bindChat} />\r\n                        </Suspense>\r\n                    </div>\r\n                )}\r\n\r\n            </section>\r\n            {moduleErr ? <ModuleError propsErr={propsErr} setModuleErr={setModuleErr}></ModuleError> : <></>}\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}","import style from './Friends.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { FriendsList } from \"./FriendsList/FriendsList\";\r\nimport { Search } from '../Search/Search'\r\nimport { addFrined, addLastMessage, updatePhotoName } from '../../store/friendSlice'\r\nimport React, { Suspense, useRef, useState } from 'react';\r\nimport { getFirestore, collection, query, where, getDocs, doc, onSnapshot } from 'firebase/firestore';\r\nimport { useEffect } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ModuleError } from '../ModuleError/ModuleError';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\n\r\nconst FriendsList = React.lazy(() => import('./FriendsList/FriendsList'))\r\n\r\n\r\nexport default function Friends() {\r\n    const context = useOutletContext()\r\n    const containerFrineds = useRef()\r\n    const friendsScroll = useRef()\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const [user, setUser] = useState([])\r\n\r\n    const [moduleErr, setModuleErr] = useState(false)\r\n    const [propsErr, setPropsErr] = useState('')\r\n\r\n    const myInfo = useSelector(state => state.user)\r\n\r\n    const db = getFirestore();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const friendList = useSelector(state => state.friend.friend)\r\n\r\n    const sortState = [...friendList]\r\n\r\n    const headRef = useRef()\r\n    const searchRef = useRef();\r\n    const searchListRef = useRef();       \r\n    const refSearch = useRef(null)\r\n\r\n    const activeModal = context.modal\r\n    const setModalActive = context.setModal\r\n\r\n\r\n    const taskAddFriend = (event) => {\r\n        event.preventDefault();\r\n        setText('')\r\n        searchUsers()\r\n    }\r\n\r\n    const searchUsers = async () => {\r\n        const q = query(collection(db, \"users\"), where('name', '==', text));\r\n        \r\n        try {\r\n            const querySnapshot = await getDocs(q);\r\n            const searchArr = []\r\n            setUser([])\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data()\r\n                setModuleErr(false)\r\n                searchArr.push(data)\r\n                setUser(searchArr)\r\n            });\r\n\r\n        } catch (error) {\r\n            setModuleErr(true)\r\n            setPropsErr('')\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const handleEvent = (e) => {\r\n        if (e.code === 'Enter') {\r\n            searchUsers()\r\n            setText('')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", myInfo.id), (doc) => {\r\n            if (doc.data()) {\r\n\r\n                const data = Object.entries(doc.data())\r\n\r\n                data.map(el => {\r\n\r\n                    const combinedId = el[0]\r\n                    if (combinedId) {\r\n                        const userInfo = el[1].userInfo\r\n                        const userDate = el[1].date.toDate()\r\n                        const friendId = userInfo.id\r\n                        const name = userInfo.displayName\r\n                        const photo = userInfo.photo\r\n                        const lastMessages = el[1].lastMessage ? el[1].lastMessage.messageText : 'No messages'\r\n                        const timePublic = userDate.getTime() ? userDate.getTime() : '--:--'\r\n                        const dateUser = new Date()\r\n                        const findMyDayBase = `${userDate.getDate()}.${userDate.getMonth() + 1}.${userDate.getFullYear()}`\r\n                        const findMyDayUser = `${dateUser.getDate()}.${dateUser.getMonth()+1}.${dateUser.getFullYear()}`\r\n                        let minute = userDate.getMinutes().toString()\r\n\r\n                        if (minute.length === 1) {\r\n                            minute = `0${minute}`\r\n                        }\r\n\r\n                        const find = friendList.find(el => el.id === combinedId)\r\n\r\n                        if(findMyDayBase === findMyDayUser){\r\n                            const date = `${userDate.getHours()}:${minute}`//maybe err in userDate\r\n\r\n                            if (!find) {\r\n                                dispatch(addFrined({ combinedId, name, date, friendId, timePublic, lastMessages, photo }))\r\n                            } else if (find.timePublic !== timePublic) {\r\n                                const friendInfo = combinedId\r\n                                const messageText = lastMessages\r\n                                const datePush = date\r\n                                dispatch(addLastMessage({ friendInfo, messageText, datePush, timePublic }))\r\n\r\n                            }else if (find.name !== name || find.photo !== photo) {\r\n                                const friendInfo = combinedId\r\n                                dispatch(updatePhotoName({ friendInfo, photo, name }))\r\n                            }\r\n\r\n                        }else {\r\n                            const date = findMyDayBase\r\n\r\n                            if (!find) {\r\n                                dispatch(addFrined({ combinedId, name, date, friendId, timePublic, lastMessages, photo }))\r\n                            } else if (find.timePublic !== timePublic) {\r\n                                const friendInfo = combinedId\r\n                                const messageText = lastMessages\r\n                                const datePush = date\r\n                                dispatch(addLastMessage({ friendInfo, messageText, datePush, timePublic }))\r\n\r\n                            }else if (find.name !== name || find.photo !== photo) {\r\n                                const friendInfo = combinedId\r\n                                dispatch(updatePhotoName({ friendInfo, photo, name }))\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                })\r\n                setModuleErr(false)\r\n\r\n            } else {\r\n                setModuleErr(true)\r\n                return \r\n            }\r\n\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [myInfo.id, friendList.map(el => el)]) \r\n\r\n    function resize() {\r\n        if (containerFrineds.current !== null) {\r\n            const containerFrinedsHeight = containerFrineds.current.offsetHeight\r\n            const headRefHeight = headRef.current.offsetHeight\r\n            const navigationRefHeight = context.navRef.current.offsetHeight\r\n\r\n            const windowHeight = window.innerHeight\r\n\r\n            const sum = containerFrinedsHeight + headRefHeight + navigationRefHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            const newHeight = containerFrinedsHeight - (-res)\r\n\r\n            containerFrineds.current.style.height = `${newHeight}px`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", resize);\r\n        resize()\r\n        return () => window.addEventListener(\"resize\", resize);\r\n    }, [friendList])\r\n\r\n\r\n    useEffect(()=>{\r\n        const searchBlock = refSearch.current\r\n        const searchActiveBlock = context.searchRef.current\r\n        const onClick = e => {    \r\n            if(!searchBlock.contains(e.target)){\r\n                if(!searchActiveBlock.contains(e.target)){\r\n                    setModalActive(false)\r\n                }\r\n            } \r\n        }\r\n\r\n        if(!activeModal){\r\n            document.addEventListener('click', onClick);\r\n        }\r\n        return () => document.removeEventListener('click', onClick);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div ref={refSearch} className={activeModal ? classNames(style.searchFriends, \"search-friends, active-modal-search\") : classNames(style.searchFriends, \"search-friends\")}>\r\n                <Search searchListRef={searchListRef} searchRef={searchRef} user={user} handleSubmit={taskAddFriend} text={text} setText={setText} handleEvent={handleEvent} />\r\n            </div> \r\n            <section className={style.friends} ref={friendsScroll}>\r\n\r\n                <div className={classNames(style.container, 'container')}>\r\n                    <div ref={headRef} className={classNames(style.head, 'head')}>\r\n                        <h2 className={classNames(style.header, 'header')}>\r\n                            Friends\r\n                        </h2>\r\n                    </div>\r\n                    <div ref={containerFrineds} className={style.scrollMessages}>\r\n                        <div className={classNames(style.containerFriendsList)}>\r\n                            <Suspense fallback={<Loader></Loader>}>\r\n                                {(friendList.length > 0 ) ? (\r\n                                    sortState.sort((a,b) => b.timePublic - a.timePublic).map((friend) => ( \r\n                                        <FriendsList key={friend.id} friend={friend}></FriendsList>\r\n                                    ))\r\n                                ):(\r\n                                    <div className={classNames(style.emptyBlock)}>Friend list is empty</div>\r\n                                )}\r\n                            </Suspense>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {moduleErr ? <ModuleError propsErr={propsErr} setModuleErr={setModuleErr}></ModuleError> : <></>}\r\n        </section>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchIcon\":\"Search_searchIcon__2+JeP\",\"searchList\":\"Search_searchList__Amjcz\",\"search\":\"Search_search__xXfoW\",\"cont\":\"Search_cont__yR28o\",\"loupe\":\"Search_loupe__ab9N9\",\"list-content\":\"Search_list-content__WxR1l\",\"list\":\"Search_list__iolTq\",\"user\":\"Search_user__bbvWu\",\"name\":\"Search_name__uV342\",\"searchListName\":\"Search_searchListName__4BQqk\",\"container\":\"Search_container__DjhSj\",\"containerSearchList\":\"Search_containerSearchList__v3e9K\",\"empty\":\"Search_empty__RZhOd\"};"],"names":["SearchList","React","Search","propsErr","user","handleSubmit","text","setText","handleEvent","searchListRef","searchRef","useState","moduleErr","setModuleErr","dispatch","useDispatch","db","getFirestore","friend","useSelector","state","myInfo","bindChat","el","name","id","photo","photoURL","combinedId","find","friendId","addFrined","getDoc","doc","exists","setDoc","messages","updateDoc","displayName","serverTimestamp","console","error","context","useOutletContext","containerSearch","useRef","resize","log","current","undefined","searchHeight","offsetHeight","navigationRefHeight","navRef","res","window","innerHeight","style","height","useEffect","addEventListener","className","classNames","ref","onKeyDown","value","onChange","e","target","type","placeholder","onClick","htmlFor","src","search","alt","length","Suspense","fallback","Loader","clickChat","ModuleError","FriendsList","Friends","containerFrineds","friendsScroll","setUser","setPropsErr","friendList","sortState","headRef","refSearch","activeModal","modal","setModalActive","setModal","searchUsers","q","query","collection","where","getDocs","querySnapshot","searchArr","forEach","data","push","containerFrinedsHeight","headRefHeight","newHeight","unsub","onSnapshot","Object","entries","map","userInfo","userDate","date","toDate","lastMessages","lastMessage","messageText","timePublic","getTime","dateUser","Date","findMyDayBase","getDate","getMonth","getFullYear","findMyDayUser","minute","getMinutes","toString","getHours","friendInfo","datePush","addLastMessage","updatePhotoName","searchBlock","searchActiveBlock","contains","document","removeEventListener","event","preventDefault","code","sort","a","b"],"sourceRoot":""}