{"version":3,"file":"static/js/234.92b96d4a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/HomePage/Friends.module.css?e856","Components/Search/Search.js","Components/HomePage/Friends.js","webpack://my-app/./src/Components/Search/Search.module.css?a5fe"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Friends_head__z9KAn\",\"header\":\"Friends_header__2vtis\",\"dots\":\"Friends_dots__hKwNl\",\"friends\":\"Friends_friends__RuUv0\",\"container\":\"Friends_container__Ji6-h\",\"searchFriends\":\"Friends_searchFriends__o9ewN\",\"containerFriendsList\":\"Friends_containerFriendsList__ZbZT9\",\"scrollMessages\":\"Friends_scrollMessages__a2NvB\",\"emptyBlock\":\"Friends_emptyBlock__ZwYFc\"};","import search from '../../img/search.svg';\r\nimport style from './Search.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addFrined } from '../../store/friendSlice';\r\n// import { SearchList } from './SearchList'\r\nimport { collection, doc, getDoc, getDocs, getFirestore, query, serverTimestamp, setDoc, updateDoc, where } from 'firebase/firestore';\r\nimport { Empty } from '../Empty/Empty';\r\nimport { Suspense, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ModuleError } from '../ModuleError/ModuleError';\r\nimport classNames from 'classnames';\r\nimport { Loader } from '../Loader/Loader';\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst SearchList = React.lazy(() => import('./SearchList'))\r\n\r\n\r\nexport function Search({  text, setText, searchListRef, searchRef }) {\r\n\r\n    const [moduleErr, setModuleErr] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const db = getFirestore()\r\n\r\n    const friend = useSelector(state => state.friend.friend)\r\n\r\n    const myInfo = useSelector(state => state.user)\r\n\r\n    const [propsErr, setPropsErr] = useState('')\r\n    const [user, setUser] = useState([]) \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setText('')\r\n        searchUsers()\r\n    }  \r\n\r\n    const handleEvent = (e) => {\r\n        e.preventDefault();\r\n        if (e.keyCode === 13) {\r\n            searchUsers()\r\n            setText('')\r\n        }\r\n    }\r\n\r\n\r\n    const searchUsers = async () => {\r\n        const q = query(collection(db, \"users\"), where('name', '==', text));\r\n        \r\n        try {\r\n            const querySnapshot = await getDocs(q);\r\n            const searchArr = []\r\n            setUser([])\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data()\r\n                if(data.id !== myInfo.id){\r\n                    setModuleErr(false)\r\n                    searchArr.push(data)\r\n                    setUser(searchArr)\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            setModuleErr(true)\r\n            setPropsErr('')\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const bindChat = async (el) => {\r\n\r\n        const name = el.name;\r\n        const id = el.id;\r\n        const photo = el.photoURL\r\n        const combinedId = myInfo.id > id ? myInfo.id + id : id + myInfo.id\r\n        const find = friend.find(el => el.id === combinedId)\r\n\r\n\r\n        try {\r\n\r\n\r\n            if (!find) {\r\n                const friendId = id\r\n                dispatch(addFrined({ combinedId, name, friendId, photo }))\r\n            }\r\n\r\n            const res = await getDoc(doc(db, 'chats', combinedId))\r\n\r\n\r\n\r\n            if (!res.exists()) {\r\n\r\n                await setDoc(doc(db, 'chats', combinedId), { messages: [] })\r\n\r\n                await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                    [combinedId + '.userInfo']: {\r\n                        id: id,\r\n                        displayName: name,\r\n                        photo: photo\r\n                    },\r\n                    [combinedId + '.date']: serverTimestamp()\r\n                })\r\n\r\n                await updateDoc(doc(db, 'chatsList', id), {\r\n                    [combinedId + '.userInfo']: {\r\n                        id: myInfo.id,\r\n                        displayName: myInfo.name,\r\n                        photo: myInfo.photo\r\n                    },\r\n                    [combinedId + '.date']: serverTimestamp()\r\n                })\r\n            }\r\n\r\n\r\n            setModuleErr(false)\r\n\r\n        } catch (error) {\r\n            setModuleErr(true)\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const context = useOutletContext()\r\n    const containerSearch = useRef()\r\n    \r\n    function resize() {\r\n        if (containerSearch.current !== null && containerSearch.current !== undefined) {\r\n            const searchHeight = searchRef.current.offsetHeight\r\n            const navigationRefHeight = context.navRef.current.offsetHeight\r\n            const windowHeight = window.innerHeight\r\n\r\n            const sum = searchHeight + navigationRefHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            containerSearch.current.style.height = `${res}px`\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        resize()\r\n        window.addEventListener(\"onload\", resize);\r\n        return () => window.addEventListener(\"resize\", resize);\r\n    }, [user])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classNames(style.container, \"container\")}>\r\n            <section ref={searchRef} className={style.search} id=\"search\">\r\n                <div className={style.cont}>\r\n                    <input inputMode='search' className={classNames(style.searchIcon)} onKeyUp={ (e) => handleEvent(e)} value={text} onChange={(e) => setText(e.target.value)} type=\"search\" id={style.searchIcon} placeholder=\"Find friend\" />\r\n                    <button type='submit' onClick={handleSubmit} className={style.loupe} htmlFor=\"search-icon\"><img src={search} alt=\"Search\" /></button>\r\n\r\n                </div>\r\n\r\n            </section>\r\n            <section ref={searchListRef} className={style.searchList} id=\"search-list\">\r\n\r\n                {(user.length === 0) ? (\r\n                    <div className={style.empty}>Search list is empty</div>\r\n                ) : (\r\n                    <div ref={containerSearch} className={classNames(style.containerSearchList, \"container-search-list\")}>\r\n                        <Suspense fallback={<Loader></Loader>}>\r\n                            <SearchList user={user} clickChat={bindChat} />\r\n                        </Suspense>\r\n                    </div>\r\n                )}\r\n\r\n            </section>\r\n            {moduleErr ? <ModuleError propsErr={propsErr} setModuleErr={setModuleErr}></ModuleError> : <></>}\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}","import style from './Friends.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { FriendsList } from \"./FriendsList/FriendsList\";\r\nimport { Search } from '../Search/Search'\r\nimport { addFrined, addLastMessage, updatePhotoName } from '../../store/friendSlice'\r\nimport React, { Suspense, useMemo, useRef, useState } from 'react';\r\nimport { getFirestore, collection, query, where, getDocs, doc, onSnapshot } from 'firebase/firestore';\r\nimport { useEffect } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ModuleError } from '../ModuleError/ModuleError';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\n\r\nconst FriendsList = React.lazy(() => import('./FriendsList/FriendsList'))\r\n\r\n\r\nexport default function Friends() {\r\n    const context = useOutletContext()\r\n    const containerFrineds = useRef()\r\n    const friendsScroll = useRef()\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const [moduleErr, setModuleErr] = useState(false)\r\n\r\n    const myInfo = useSelector(state => state.user)\r\n\r\n    const db = getFirestore();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const friendList = useSelector(state => state.friend.friend)\r\n\r\n    const sortState = [...friendList]\r\n\r\n    const headRef = useRef()\r\n    const searchRef = useRef();\r\n    const searchListRef = useRef();       \r\n    const refSearch = useRef(null)\r\n\r\n    const activeModal = context.modal\r\n    const setModalActive = context.setModal\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", myInfo.id), (doc) => {\r\n            if (doc.data()) {\r\n                const data = Object.entries(doc.data())\r\n                data.map(el => {\r\n                    //console.log(el)\r\n                    const combinedId = el[0]\r\n                    if (combinedId) {\r\n                        const userInfo = el[1].userInfo\r\n                        const userDate = el[1].date.toDate()\r\n                        const friendId = userInfo.id\r\n                        const name = userInfo.displayName\r\n                        const photo = userInfo.photo\r\n                        const lastMessages = el[1].lastMessage ? el[1].lastMessage.messageText : 'No messages'\r\n                        const timePublic = userDate.getTime() ? userDate.getTime() : '--:--'\r\n                        const dateUser = new Date()\r\n                        const findMyDayBase = `${userDate.getDate()}.${userDate.getMonth() + 1}.${userDate.getFullYear()}`\r\n                        const findMyDayUser = `${dateUser.getDate()}.${dateUser.getMonth()+1}.${dateUser.getFullYear()}`\r\n                        let minute = userDate.getMinutes().toString()\r\n\r\n                        if (minute.length === 1) {\r\n                            minute = `0${minute}`\r\n                        }\r\n\r\n                        const find = friendList.find(el => el.id === combinedId)\r\n\r\n                        if(findMyDayBase === findMyDayUser){\r\n                            const date = `${userDate.getHours()}:${minute}`//maybe err in userDate\r\n\r\n                            if (!find) {\r\n                                dispatch(addFrined({ combinedId, name, date, friendId, timePublic, lastMessages, photo }))\r\n                            } else if (find.timePublic !== timePublic) {\r\n                                const friendInfo = combinedId\r\n                                const messageText = lastMessages\r\n                                const datePush = date\r\n                                dispatch(addLastMessage({ friendInfo, messageText, datePush, timePublic }))\r\n\r\n                            }else if (find.name !== name || find.photo !== photo) {\r\n                                const friendInfo = combinedId\r\n                                dispatch(updatePhotoName({ friendInfo, photo, name }))\r\n                            }\r\n\r\n                        }else {\r\n                            const date = findMyDayBase\r\n\r\n                            if (!find) {\r\n                                dispatch(addFrined({ combinedId, name, date, friendId, timePublic, lastMessages, photo }))\r\n                            } else if (find.timePublic !== timePublic) {\r\n                                const friendInfo = combinedId\r\n                                const messageText = lastMessages\r\n                                const datePush = date\r\n                                dispatch(addLastMessage({ friendInfo, messageText, datePush, timePublic }))\r\n\r\n                            }else if (find.name !== name || find.photo !== photo) {\r\n                                const friendInfo = combinedId\r\n                                dispatch(updatePhotoName({ friendInfo, photo, name }))\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                })\r\n                setModuleErr(false)\r\n\r\n            } else {\r\n                setModuleErr(true)\r\n                return \r\n            }\r\n\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [friendList]) \r\n\r\n    function resize() {\r\n        if (containerFrineds.current !== null) {\r\n            const containerFrinedsHeight = containerFrineds.current.offsetHeight\r\n            const headRefHeight = headRef.current.offsetHeight\r\n            const navigationRefHeight = context.navRef.current.offsetHeight\r\n\r\n            const windowHeight = window.innerHeight\r\n\r\n            const sum = containerFrinedsHeight + headRefHeight + navigationRefHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            const newHeight = containerFrinedsHeight - (-res)\r\n\r\n            containerFrineds.current.style.height = `${newHeight}px`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", resize);\r\n        resize()\r\n        return () => window.addEventListener(\"resize\", resize);\r\n    }, [friendList])\r\n\r\n\r\n    useEffect(()=>{\r\n        const searchBlock = refSearch.current\r\n        const searchActiveBlock = context.searchRef.current\r\n        const onClick = e => {    \r\n            if(!searchBlock.contains(e.target)){\r\n                if(!searchActiveBlock.contains(e.target)){\r\n                    setModalActive(false)\r\n                }\r\n            } \r\n        }\r\n\r\n        if(!activeModal){\r\n            document.addEventListener('click', onClick);\r\n        }\r\n        return () => document.removeEventListener('click', onClick);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div ref={refSearch} className={activeModal ? classNames(style.searchFriends, \"search-friends, active-modal-search\") : classNames(style.searchFriends, \"search-friends\")}>\r\n                <Search searchListRef={searchListRef} searchRef={searchRef}  text={text} setText={setText}  />\r\n            </div> \r\n            <section className={style.friends} ref={friendsScroll}>\r\n\r\n                <div className={classNames(style.container, 'container')}>\r\n                    <div ref={headRef} className={classNames(style.head, 'head')}>\r\n                        <h2 className={classNames(style.header, 'header')}>\r\n                            Friends\r\n                        </h2>\r\n                    </div>\r\n                    <div ref={containerFrineds} className={style.scrollMessages}>\r\n                        <div className={classNames(style.containerFriendsList)}>\r\n                            <Suspense fallback={<Loader></Loader>}>\r\n                                {(friendList.length > 0 ) ? (\r\n                                    sortState.sort((a,b) => b.timePublic - a.timePublic).map((friend) => ( \r\n                                        <FriendsList key={friend.id} friend={friend}></FriendsList>\r\n                                    ))\r\n                                ):(\r\n                                    <div className={classNames(style.emptyBlock)}>Friend list is empty</div>\r\n                                )}\r\n                            </Suspense>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {moduleErr ? <ModuleError setModuleErr={setModuleErr}></ModuleError> : <></>}\r\n        </section>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchIcon\":\"Search_searchIcon__2+JeP\",\"searchList\":\"Search_searchList__Amjcz\",\"search\":\"Search_search__xXfoW\",\"cont\":\"Search_cont__yR28o\",\"loupe\":\"Search_loupe__ab9N9\",\"list-content\":\"Search_list-content__WxR1l\",\"list\":\"Search_list__iolTq\",\"user\":\"Search_user__bbvWu\",\"name\":\"Search_name__uV342\",\"searchListName\":\"Search_searchListName__4BQqk\",\"container\":\"Search_container__DjhSj\",\"containerSearchList\":\"Search_containerSearchList__v3e9K\",\"empty\":\"Search_empty__RZhOd\"};"],"names":["SearchList","React","Search","text","setText","searchListRef","searchRef","useState","moduleErr","setModuleErr","dispatch","useDispatch","db","getFirestore","friend","useSelector","state","myInfo","user","propsErr","setPropsErr","setUser","searchUsers","q","query","collection","where","getDocs","querySnapshot","searchArr","forEach","doc","data","id","push","console","error","bindChat","el","name","photo","photoURL","combinedId","find","friendId","addFrined","getDoc","exists","setDoc","messages","updateDoc","displayName","serverTimestamp","context","useOutletContext","containerSearch","useRef","resize","current","undefined","searchHeight","offsetHeight","navigationRefHeight","navRef","res","window","innerHeight","style","height","useEffect","addEventListener","className","classNames","ref","inputMode","onKeyUp","e","preventDefault","keyCode","handleEvent","value","onChange","target","type","placeholder","onClick","event","htmlFor","src","search","alt","length","Suspense","fallback","Loader","clickChat","ModuleError","FriendsList","Friends","containerFrineds","friendsScroll","friendList","sortState","headRef","refSearch","activeModal","modal","setModalActive","setModal","containerFrinedsHeight","headRefHeight","newHeight","unsub","onSnapshot","Object","entries","map","userInfo","userDate","date","toDate","lastMessages","lastMessage","messageText","timePublic","getTime","dateUser","Date","findMyDayBase","getDate","getMonth","getFullYear","findMyDayUser","minute","getMinutes","toString","getHours","friendInfo","datePush","addLastMessage","updatePhotoName","searchBlock","searchActiveBlock","contains","document","removeEventListener","sort","a","b"],"sourceRoot":""}