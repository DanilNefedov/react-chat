{"version":3,"file":"static/js/804.1d238d95.chunk.js","mappings":"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","sources":["img/edit.svg","webpack://my-app/./src/Components/MessagesPage/MessagesMain.module.css?8bf6","img/send.svg","state/editMessage.js","Components/MessagesPage/SendMessages.js","img/delete-white.svg","Components/MessagesPage/MessagesField.js","Components/MessagesPage/MessagesMain.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#5C5E6F\",\n    d: \"M9 39h2.2l22.15-22.15-2.2-2.2L9 36.8Zm30.7-24.3-6.4-6.4 2.1-2.1q.85-.85 2.1-.85t2.1.85l2.2 2.2q.85.85.85 2.1t-.85 2.1Zm-2.1 2.1L12.4 42H6v-6.4l25.2-25.2Zm-5.35-1.05-1.1-1.1 2.2 2.2Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.666b6fca3a40a0415e39054d202d0667.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"MessagesMain_header__EMkYa\",\"or\":\"MessagesMain_or__g5wuD\",\"user\":\"MessagesMain_user__TDMJA\",\"userImg\":\"MessagesMain_userImg__Mop0A\",\"name\":\"MessagesMain_name__58IH7\",\"online\":\"MessagesMain_online__FByeQ\",\"dots\":\"MessagesMain_dots__9N9pU\",\"container\":\"MessagesMain_container__c2E6N\",\"input\":\"MessagesMain_input__R5zJ0\",\"send\":\"MessagesMain_send__tKhge\",\"textArea\":\"MessagesMain_textArea__v6811\",\"messages\":\"MessagesMain_messages__eWIbA\",\"empty\":\"MessagesMain_empty__Un+PR\",\"messagesMe\":\"MessagesMain_messagesMe__Go3UK\",\"messagesFriend\":\"MessagesMain_messagesFriend__4kSKR\",\"messageContainerMe\":\"MessagesMain_messageContainerMe__GIXeF\",\"messageContainerFriend\":\"MessagesMain_messageContainerFriend__6diH7\",\"dateMe\":\"MessagesMain_dateMe__XY83U\",\"dateFriend\":\"MessagesMain_dateFriend__Iu9Pj\",\"dateMessages\":\"MessagesMain_dateMessages__HlrtQ\",\"deletedInput\":\"MessagesMain_deletedInput__caMDW\",\"back\":\"MessagesMain_back__-Z3YD\",\"photoSender\":\"MessagesMain_photoSender__ZMI70\",\"imgSenderBlock\":\"MessagesMain_imgSenderBlock__ZJrLC\",\"infoSender\":\"MessagesMain_infoSender__9F9Tj\",\"desactiveName\":\"MessagesMain_desactiveName__KMp2g\",\"nameSender\":\"MessagesMain_nameSender__1ewyf\",\"nameSenderText\":\"MessagesMain_nameSenderText__-gZpe\",\"editIcon\":\"MessagesMain_editIcon__8-EL3\"};","var _defs, _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#ffffff\",\n    id: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:none;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"send--alt--filled\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"_Transparent_Rectangle_\",\n    \"data-name\": \"<Transparent Rectangle>\",\n    className: \"cls-1\",\n    width: 32,\n    height: 32\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.e6e41f470c70eedfe79bcc21222a7720.svg\";\nexport { ForwardRef as ReactComponent };","export const initialEditMessage = {\r\n    modal:false,\r\n    editMess: {},\r\n    editText: ''\r\n}\r\n\r\n\r\nexport function initEditMessage (initialEditMessage){\r\n    return { \r\n        ...initialEditMessage\r\n    }\r\n}\r\n\r\n\r\nexport function reducerEditMessage(state, action){\r\n    switch(action.type){\r\n        case 'modal':\r\n            return{\r\n                ...state, \r\n                modal: action.payload\r\n            }\r\n        case 'editMess':\r\n            return{\r\n                ...state, \r\n                editMess: action.payload\r\n            }\r\n        case 'editText': \r\n            return{\r\n                ...state,\r\n                editText: action.payload\r\n            }\r\n        case 'init':\r\n            return initEditMessage(action.payload)\r\n    }\r\n}\r\n","import { doc, getDoc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport send from '../../img/send.svg';\r\nimport style from './MessagesMain.module.css';\r\nimport done from '../../img/done-contact.svg'\r\nimport { editMessage } from '../../store/messagesSlice';\r\nimport { editLastMessageGroup } from '../../store/groupSlice';\r\nimport { editLastMessageFriend } from '../../store/friendSlice';\r\nimport { initialEditMessage } from '../../state/editMessage';\r\n\r\n\r\n\r\n\r\nexport function SendMessages({stateEditMess, setSizeWindow, sendMess, text, setMessageText, handleEvent, innerRef, infoChat}) {\r\n    const myInfo = useSelector(state => state.user)\r\n    const db = getFirestore()\r\n    const textAreaEdit = useRef()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // console.log(infoChat)\r\n\r\n    useEffect(() =>{\r\n        window.addEventListener(\"resize\", keyboardDidShow )\r\n        function keyboardDidShow() {\r\n            const newHeight = window.visualViewport.height;\r\n            setSizeWindow(newHeight)\r\n        }\r\n        return () =>{\r\n            keyboardDidShow()\r\n        }\r\n    }, [])\r\n\r\n    const delViewMess = async () => {\r\n        try{\r\n            await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                [`${infoChat.id}.viewMessage.newMessView`] :true\r\n                \r\n            })\r\n\r\n            if(infoChat.users ){\r\n                const usersGroup = Object.entries(infoChat.users)\r\n                usersGroup.map( async el => {\r\n                    if(el[1].deleted === false && el[0] !== myInfo.id){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                        })\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                })\r\n            }\r\n            \r\n        } catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        const textArea = textAreaEdit.current\r\n        if(textArea){\r\n            textArea.focus()\r\n        }\r\n\r\n    },[stateEditMess[0].modal])\r\n\r\n\r\n    const setEditMess = async () =>{\r\n        const messageText = stateEditMess[0].editText\r\n        const chatId = infoChat.id\r\n        const messageId = stateEditMess[0].editMess.messageId\r\n\r\n        if(infoChat.lastMessages === messageText){\r\n            stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n            \r\n        }else{\r\n            const docSnap = await getDoc(doc(db, 'chats', chatId));\r\n            if (docSnap.exists()){\r\n                const array = docSnap.data().messages;\r\n                const updatedArray = array.map((element) =>{\r\n                    if (element.id === messageId) {\r\n                        dispatch(editMessage({chatId, messageId, messageText}))\r\n                        return { ...element, messageText: messageText };\r\n                    }else{\r\n                        return element;\r\n                    }\r\n                })\r\n\r\n                await updateDoc(doc(db, 'chats', chatId), { messages: updatedArray });\r\n            }\r\n\r\n\r\n            if(infoChat.users){\r\n                const usersArr = Object.entries(infoChat.users)\r\n                usersArr.map(async el =>{\r\n                    if(el[1].deleted === false ){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.lastMessage.messageText`]: messageText \r\n                        })\r\n                        const lastMessages = messageText\r\n                        const combinedId = infoChat.id\r\n                        dispatch(editLastMessageGroup({combinedId, lastMessages}))\r\n\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.lastMessage.messageText`]: messageText \r\n                })\r\n                await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                    [`${infoChat.id}.lastMessage.messageText`] :messageText\r\n                })\r\n                const lastMessages = messageText\r\n                const combinedId = infoChat.id\r\n                dispatch(editLastMessageFriend({combinedId, lastMessages}))\r\n\r\n            }\r\n            stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n\r\n        }\r\n    }\r\n\r\n    // console.log(infoChat)\r\n\r\n\r\n    return (\r\n        <section className={style.textArea} ref={innerRef}>\r\n            {stateEditMess[0].modal ? \r\n            <>\r\n            <textarea onChange={(e) => stateEditMess[1]({type:'editText', payload:e.target.value})} ref={textAreaEdit} value={stateEditMess[0].editText} onKeyDown={handleEvent} name=\"messages\" id='textareaEdit' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => setEditMess()} className={style.send}>\r\n                <img src={done} alt=\"accept\" />\r\n            </button>\r\n            </>\r\n            :\r\n            <>\r\n            <textarea onClick={() => delViewMess()} placeholder='Enter your message' onKeyDown={handleEvent} value={text} onChange={(e) => setMessageText(e.target.value)} name=\"messages\" id='textarea' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => sendMess()} type='submit' className={style.send}>\r\n                <img src={send} alt=\"Send\" />\r\n            </button>\r\n            </>\r\n            }\r\n\r\n        </section>\r\n    )\r\n}","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDeleteWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E2FFFF\",\n    d: \"M13.05 42q-1.25 0-2.125-.875T10.05 39V10.5H8v-3h9.4V6h13.2v1.5H40v3h-2.05V39q0 1.2-.9 2.1-.9.9-2.1.9Zm21.9-31.5h-21.9V39h21.9Zm-16.6 24.2h3V14.75h-3Zm8.3 0h3V14.75h-3Zm-13.6-24.2V39Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteWhite);\nexport default __webpack_public_path__ + \"static/media/delete-white.775e9dd618f07a57d467dfc4059b0335.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\"\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMessage, editMessage, updateNameMessages, updatePhotoMessages } from \"../../store/messagesSlice\";\r\nimport { Empty } from \"../Empty/Empty\";\r\nimport style from './MessagesMain.module.css'\r\nimport img from '../../img/user-M.png'\r\nimport { EditMessges } from \"./EditMessages\";\r\n\r\n\r\n\r\nexport function MessagesField({ setSizeWindow, infoChat, scrollRef, stateEditMess }) {\r\n    const messagesState = useSelector(state => state.message.messages)\r\n    const user = useSelector(state => state.user)\r\n    const findChat = messagesState.find(el => el.chatId === infoChat.id)\r\n    // console.log(friend)\r\n\r\n    const db = getFirestore()\r\n    const dispatch = useDispatch()\r\n    const dayArr = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n\r\n    useEffect(() => {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }, [messagesState])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", setSizeWindow(window.visualViewport.height));\r\n\r\n        return () => window.addEventListener(\"resize\", setSizeWindow(window.visualViewport.height));\r\n    }, [messagesState, window.innerHeight])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, 'chats', infoChat.id), (doc) => {\r\n            if (doc.data()) {\r\n                const data = doc.data()\r\n                const chatId = infoChat.id\r\n                // console.log(data)\r\n\r\n                data.messages.map(el => {\r\n                    const userId = el.userId\r\n                    const messageText = el.messageText\r\n                    const messageId = el.id\r\n                    const date = el.date\r\n                    const photo = el.photo \r\n                    // console.log(photo)\r\n                    const name = el.name \r\n                    const dayMess = dayArr[date.toDate().getDay()]//\r\n                    const hoursMess = date.toDate().getHours()//\r\n                    let minute = date.toDate().getMinutes().toString()//\r\n                    \r\n                    if (minute.length === 1) {\r\n                        minute = `0${minute}`\r\n                    }\r\n                    const datePush = `${dayMess} ${hoursMess}:${minute}`\r\n\r\n                    if (findChat && findChat.messages) {\r\n                        const userMess = findChat.messages.find(el => el.messageId === messageId)\r\n                        if(userMess !== undefined && userMess.photo !== undefined && photo !== undefined){//some err \"cant reading undefined of photo\"\r\n                            if (userMess.photo !== photo) {\r\n                                dispatch(updatePhotoMessages({ messageId, chatId, photo }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && userMess.name !== undefined && name !== undefined){//some err \"cant reading undefined of name\"\r\n                            if (userMess.name !== name) {\r\n                                dispatch(updateNameMessages({ messageId, chatId, name }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && messageText !== undefined && userMess.text !== undefined){\r\n                            if(userMess.text !== messageText){\r\n                                dispatch(editMessage({chatId, messageId, messageText}))\r\n                            }\r\n                        }\r\n                        \r\n                    }\r\n                    dispatch(addMessage({ name, chatId, userId, messageText, datePush, messageId, photo }))\r\n                })\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [findChat])\r\n    // console.log(findChat)\r\n    \r\n    const addInfoEdit = (idMess, chat) =>{\r\n        const key = idMess\r\n        const infoChat = chat\r\n        const editMess = infoChat.messages.find(el => el.messageId === key)\r\n        if(editMess){\r\n            stateEditMess[1]({type:'modal', payload:true}) \r\n            stateEditMess[1]({type:'editMess', payload:editMess})\r\n            stateEditMess[1]({type:'editText', payload:editMess.text})\r\n        }\r\n    }\r\n\r\n    return (\r\n        (messagesState.length > 0 && findChat ? (findChat.messages.map(el => (\r\n            el.userId === user.id ? (\r\n                <div key={el.messageId} className={style.messageContainerMe}>\r\n                    <span onClick={() => {\r\n                    addInfoEdit(el.messageId, findChat)\r\n                    }} className={classNames(\"message\", style.messagesMe)}>\r\n                        {/* <span className={style.nameSenderText}>{el.name}</span> */}\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateMe)}>{el.date}</span>\r\n\r\n                    </span>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                            <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        </span>\r\n                        {/* <span className={el.photo ? style.desactiveName : style.nameSender}>{el.name}</span> */}\r\n                    </span>\r\n                </div>\r\n            ):(\r\n                <div key={el.messageId} className={style.messageContainerFriend}>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                        </span>\r\n                        <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        {/* <span className={el.photo ? style.desactiveName : style.nameSender}>{el.name}</span> */}\r\n                    </span>\r\n                    <span className={classNames(\"message\", style.messagesFriend)}>\r\n                        {/* <span className={style.nameSenderText}>{el.name}</span> */}\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateFriend)}>{el.date}</span>\r\n                    </span>\r\n\r\n                </div>\r\n            )\r\n        ))): (\r\n            <Empty text={'No Messages'}></Empty>\r\n        ))\r\n    );\r\n}\r\n\r\n\r\n","import { Link, Outlet, Route, Routes, useNavigate, useOutletContext, useParams } from 'react-router-dom';\r\nimport style from './MessagesMain.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useReducer, useRef, useState } from 'react';\r\nimport { SendMessages } from './SendMessages';\r\nimport { arrayUnion, doc, getDoc, getFirestore, onSnapshot, serverTimestamp, Timestamp, updateDoc } from 'firebase/firestore';\r\nimport { v4 as uuid } from 'uuid';\r\nimport img from '../../img/user-M.png'\r\nimport { useEffect } from 'react';\r\nimport { updatePhotoName, viewMessage } from '../../store/friendSlice';\r\nimport back from '../../img/back-dark.svg'\r\nimport { deletedUser, viewMessageGroup } from '../../store/groupSlice';\r\nimport { MessagesField } from './MessagesField';\r\nimport { initialStateGroup, reducerGroup } from '../../state/group';\r\nimport edit from '../../img/edit.svg'\r\nimport { EditMessges } from './EditMessages';\r\nimport { initialEditMessage, reducerEditMessage } from '../../state/editMessage';\r\n\r\n\r\nexport default function MessagesMain() {\r\n    const friend = useSelector(state => state.friend.friend)\r\n    const group = useSelector(state => state.group.group)\r\n    const user = useSelector(state => state.user)\r\n    const navigate = useNavigate()\r\n    // const [editMess, setEditMess] = useState(false)\r\n\r\n    const nameRef = useRef();\r\n    const scrollRef = useRef();\r\n    const footerRef = useRef();\r\n\r\n    const db = getFirestore()\r\n\r\n    const [link] = Object.values(useParams())\r\n    const infoChat = friend.find(el => el.id === link) ? friend.find(el => el.id === link) : group.find(el => el.id === link)\r\n    // console.log(infoChat)\r\n\r\n    const dispatch = useDispatch()\r\n    const [stateGroup, dispatchStateGroup] = useReducer(reducerGroup, initialStateGroup)\r\n    const [editMessage, dispatchEditMessage] = useReducer(reducerEditMessage, initialEditMessage)\r\n\r\n    const [sizeWindow, setSizeWindow] = useState(window.visualViewport.height)//can change for reducer\r\n    const [deletedAcc, setDeletedAcc] = useState(false)\r\n    const [text, setMessageText] = useState('');\r\n\r\n    const sendMess = async () => {\r\n        const messageText = text\r\n        setMessageText('')\r\n\r\n\r\n        if (messageText !== '') {\r\n            const messageId = uuid()\r\n            const date = Timestamp.now()\r\n            // const userIdMess = user.id\r\n\r\n            await updateDoc(doc(db, 'chats', infoChat.id), {\r\n\r\n                messages: arrayUnion({\r\n                    id: messageId,\r\n                    messageText,\r\n                    userId: user.id,\r\n                    date: date,\r\n                    photo: user.photo,\r\n                    name:user.name,\r\n                    deleted:false\r\n                })\r\n            })\r\n\r\n            await updateDoc(doc(db, 'chatsList', user.id), {\r\n                [infoChat.id + '.lastMessage']: {\r\n                    messageText\r\n                },\r\n                [infoChat.id + '.date']: serverTimestamp(),\r\n                [infoChat.id + '.viewMessage']:{\r\n                    newMessView: true,\r\n                    idSender:user.id,\r\n                    viewMess:false\r\n                }\r\n\r\n            })\r\n\r\n            if(infoChat.users){\r\n                for(const key in infoChat.users){\r\n                    const res = await getDoc(doc(db, 'chatsList', key))\r\n                    if (res.exists()) {\r\n                        await updateDoc(doc(db, 'chatsList', key), {\r\n                            [infoChat.id + '.lastMessage']: {\r\n                                messageText\r\n                            },\r\n                            [infoChat.id + '.date']: serverTimestamp(),\r\n                            [infoChat.id + '.viewMessage']:{\r\n                                newMessView: false,\r\n                                idSender:user.id,\r\n                                viewMess:false\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                \r\n           }else{\r\n                const res = await getDoc(doc(db, 'chatsList', infoChat.friendId))\r\n                // console.log('w')\r\n                if (res.exists()) {\r\n                    await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                        [infoChat.id + '.lastMessage']: {\r\n                            messageText\r\n                        },\r\n                        [infoChat.id + '.date']: serverTimestamp(),\r\n                        [infoChat.id + '.viewMessage']:{\r\n                            newMessView: false,\r\n                            idSender:user.id,\r\n                            viewMess:false\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleEvent = (e) => {\r\n\r\n        if (e.code === 'Enter' && e.ctrlKey === false && e.shiftKey === false) {\r\n            e.preventDefault()\r\n            sendMess()\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", user.id), (doc) => {//ERROR update Deleted status\r\n            \r\n            const data = doc.data() ?  Object.entries(doc.data()) : false\r\n            // console.log(\"data\")\r\n            if (data) {\r\n\r\n                const findChat = data.find(el => el[0] === infoChat.id)                    \r\n                const viewMess = findChat && findChat[1].viewMessage\r\n                const view = viewMess && viewMess.viewMess \r\n                const idSender = viewMess && viewMess.idSender \r\n                const newMess = viewMess && viewMess.newMessView\r\n                if (findChat && findChat[1].chat) {\r\n                    // console.log(findChat[1].deleted )\r\n                    const combinedId = findChat[0]\r\n                    const name = findChat[1].name ? findChat[1].name.name : ''\r\n                    const photo = findChat[1].photo.photo\r\n\r\n\r\n                    if (findChat[1].deleted.deleted ) {//change\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(true)\r\n                        return\r\n                    } else {\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(false)\r\n                    }\r\n\r\n                    dispatch(viewMessage({newMess, view,combinedId,idSender}))\r\n                }else if(findChat && findChat[1].group){\r\n                    const combinedId = findChat[0]\r\n                    const usersArr = Object.entries(findChat[1].group.users)\r\n                    const users = findChat[1].group.users\r\n                    const infoUsers = Object.entries(infoChat.users)\r\n                \r\n                    for(let i = 0; i < usersArr.length; i++){\r\n                        if(usersArr[i][1].deleted !== infoUsers[i][1].deleted){\r\n                            dispatch(deletedUser({combinedId, users}))\r\n                        }\r\n\r\n                        if(usersArr[i][1].admin && usersArr[i][1].id === user.id){\r\n                            // console.log(usersArr[i][1])\r\n                            dispatchStateGroup({type: 'admin', payload: true})\r\n                        }\r\n                    }\r\n                    dispatch(viewMessageGroup({newMess, view,combinedId,idSender}))\r\n                }\r\n            }\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [infoChat])\r\n    // console.log(infoChat)\r\n\r\n    useEffect(()=>{\r\n        if (scrollRef.current !== null) {\r\n            const nameHeight = nameRef.current.offsetHeight\r\n            const footerHeight = footerRef.current.offsetHeight\r\n            const windowHeight = window.visualViewport.height\r\n\r\n            const sum = nameHeight + footerHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            scrollRef.current.style.height = `${res}px`\r\n            scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n        }\r\n\r\n    }, [sizeWindow])\r\n\r\n\r\n\r\n    return (\r\n        <section className={style.messagesSec}>\r\n            <div className={classNames(style.container, 'container')}>\r\n                <header className={style.header} ref={nameRef}>\r\n                    <div className={style.user}>\r\n                        {stateGroup.admin && \r\n                        <Link state={infoChat} to='/edit-group'>\r\n                            <img className={style.editIcon} src={edit} alt=\"edit\" />\r\n                        </Link>}\r\n                        <div className={style.userImg}>\r\n                            <img src={infoChat.photo !== null ? infoChat.photo : img} alt=\"User\" />\r\n                        </div>\r\n                        <div className={style.about}>\r\n                            <h2 className={style.name}>\r\n                                {infoChat.name}\r\n                            </h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div onClick={() => {navigate('/')}} className={style.back}>\r\n                        <img src={back} alt=\"back\" />\r\n                    </div>\r\n                </header>\r\n\r\n                <section ref={scrollRef} id='scroll' className={editMessage.modal ? classNames(style.noScroll, style.messages) : style.messages}>\r\n                    <MessagesField stateEditMess={[editMessage, dispatchEditMessage]} setSizeWindow={setSizeWindow} scrollRef={scrollRef} infoChat={infoChat}></MessagesField>\r\n                    \r\n                </section>\r\n                {deletedAcc\r\n                    ?\r\n                    <div ref={footerRef} className={classNames(style.deletedInput)}>Account has been deleted</div>\r\n                    :\r\n                    <SendMessages stateEditMess={[editMessage, dispatchEditMessage]} infoChat={infoChat} scrollRef={scrollRef} setSizeWindow={setSizeWindow}  innerRef={footerRef} handleEvent={handleEvent} sendMess={sendMess} text={text} setMessageText={setMessageText} />\r\n                }\r\n                {/* <EditMessges stateEditMess={[editMessage, dispatchEditMessage]}></EditMessges> */}\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}"],"names":["initialEditMessage","modal","editMess","editText","reducerEditMessage","state","action","type","payload","initEditMessage","SendMessages","stateEditMess","setSizeWindow","sendMess","text","setMessageText","handleEvent","innerRef","infoChat","myInfo","useSelector","user","db","getFirestore","textAreaEdit","useRef","dispatch","useDispatch","useEffect","keyboardDidShow","newHeight","window","visualViewport","height","addEventListener","delViewMess","updateDoc","doc","id","users","Object","entries","map","el","deleted","friendId","console","error","textArea","current","focus","setEditMess","messageText","chatId","messageId","lastMessages","getDoc","docSnap","exists","array","data","messages","updatedArray","element","editMessage","combinedId","editLastMessageGroup","editLastMessageFriend","className","style","ref","onChange","e","target","value","onKeyDown","name","rows","onClick","src","done","alt","placeholder","send","MessagesField","scrollRef","messagesState","message","findChat","find","dayArr","scrollTop","scrollHeight","innerHeight","unsub","onSnapshot","userId","date","photo","dayMess","toDate","getDay","hoursMess","getHours","minute","getMinutes","toString","length","datePush","userMess","undefined","updatePhotoMessages","updateNameMessages","addMessage","idMess","chat","key","addInfoEdit","classNames","img","Empty","MessagesMain","friend","group","navigate","useNavigate","nameRef","footerRef","values","useParams","link","useReducer","reducerGroup","initialStateGroup","stateGroup","dispatchStateGroup","dispatchEditMessage","useState","sizeWindow","deletedAcc","setDeletedAcc","uuid","Timestamp","arrayUnion","serverTimestamp","newMessView","idSender","viewMess","viewMessage","view","newMess","updatePhotoName","usersArr","infoUsers","i","deletedUser","admin","viewMessageGroup","nameHeight","offsetHeight","footerHeight","res","to","edit","back","code","ctrlKey","shiftKey","preventDefault"],"sourceRoot":""}