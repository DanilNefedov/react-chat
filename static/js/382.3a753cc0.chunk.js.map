{"version":3,"file":"static/js/382.3a753cc0.chunk.js","mappings":"oLACA,EAAuB,0BAAvB,EAA2D,6BAA3D,EAAoG,+BAApG,EAA8I,8BAA9I,EAAmL,0BAAnL,EAAoN,0BAApN,EAAyP,8BAAzP,EAAuS,mCAAvS,EAAkV,2BAAlV,EAAwX,8B,mECwCxX,IACA,EAAe,IAA0B,oECDzC,IACA,EAAe,IAA0B,+D,SC/B1B,SAASA,EAAY,GAAW,IAAVC,EAAM,EAANA,OAC1BC,EAA0ED,EAA1EC,GAAIC,EAAsEF,EAAtEE,KAAMC,EAAgEH,EAAhEG,aAAcC,EAAkDJ,EAAlDI,KAAMC,EAA4CL,EAA5CK,MAAOC,EAAqCN,EAArCM,KAAMC,EAA+BP,EAA/BO,SAAUC,EAAqBR,EAArBQ,SAAUC,EAAWT,EAAXS,QAChEC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IACxCC,GAAKC,EAAAA,EAAAA,MAGLC,EAAW,yCAAG,6GAENC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIJ,EAAI,YAAaJ,EAAOT,KAAI,oBACxCA,EAAE,6BAA6B,IAErC,WAECD,EAAOmB,MAAK,gBACQC,OAAOC,QAAQrB,EAAOmB,OAC9BG,IAAG,yCAAE,WAAMC,GAAE,0EACC,IAAlBA,EAAG,GAAGC,SAAqBD,EAAG,KAAOb,EAAOT,GAAE,iCACvCgB,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIJ,EAAI,YAAaS,EAAG,KAAI,oBACpCtB,EAAE,0BAA0B,IAClC,2CAET,mDANa,IAMZ,2BAEoB,IAAnBD,EAAOwB,QAAiB,mCACjBP,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIJ,EAAI,YAAaP,IAAU,oBACvCN,EAAE,0BAA0B,IAClC,0DAKVwB,QAAQC,MAAM,EAAD,IAAK,0DAEzB,kBA3BgB,mCA4CjB,OACI,UAAC,KAAI,CAACC,QAAS,kBAAMX,GAAa,EAAEY,GAAI3B,EAAI4B,UAAWC,IAAWC,EAAY,gBAAgB,WAC1F,iBAAKF,UAAWE,EAAc,WAC1B,gBAAKF,UAAWC,IAAWC,EAAiB,aAAa,UACrD,gBAAKC,IAAe,OAAV3B,EAAiBA,EAAQ4B,EAAKC,IAAI,YAEhD,iBAAKL,UAAWE,EAAe,WAC3B,cAAGF,UAAWC,IAAWC,EAAY,aAAa,SAAE7B,KACpD,cAAG2B,UAAWE,EAAe,SAAmB,KAAjB5B,EAAqB,cAAeA,WAG3E,iBAAK0B,UAAWE,EAAoB,WAChC,gBAAKF,UAAWC,IAAWC,EAAY,aAAa,SAC/C3B,KAEL,gBAAKyB,UAAWC,IAAWC,GAAa,SA5B5CtB,GAAWD,IAAaE,EAAOT,GAGhCK,GAAQE,IAAaE,EAAOT,IACpB,gBAAK+B,IAAKG,EAAWD,IAAI,uBAEhC5B,GAAQE,IAAaE,EAAOT,IAGzB,yBAFI,gBAAK+B,IAAKI,EAAWF,IAAI,wBANzB,gBAAKL,UAAWC,IAAWC,GAAgB,SAAC,cAiC/D,C","sources":["webpack://my-app/./src/Components/HomePage/FriendsList/FriendsList.module.css?a93f","img/check-mess-done.svg","img/check-mess.svg","Components/HomePage/FriendsList/FriendsList.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"FriendsList_list__172wc\",\"message\":\"FriendsList_message__G0ovR\",\"userPhoto\":\"FriendsList_userPhoto__mgQVu\",\"userMess\":\"FriendsList_userMess__9He6E\",\"name\":\"FriendsList_name__dCeDp\",\"date\":\"FriendsList_date__ihF14\",\"headMess\":\"FriendsList_headMess__GEA16\",\"listDateCheck\":\"FriendsList_listDateCheck__mAHRz\",\"check\":\"FriendsList_check__tgsJf\",\"viewMess\":\"FriendsList_viewMess__fh5x-\"};","var _path, _path2, _path3, _line;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCheckMessDone(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 24 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.22175 21.2696L22.3198 9.32297\",\n    stroke: \"#9068FE\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.24224 21.7731L6.99995 19.0047\",\n    stroke: \"#9068FE\",\n    strokeWidth: 2\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.56779 18.3476L19.9999 5.99998\",\n    stroke: \"#9068FE\",\n    strokeWidth: 2\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6.78934,\n    y1: 18.2919,\n    x2: 1.76732,\n    y2: 12.0646,\n    stroke: \"#9068FE\",\n    strokeWidth: 2\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckMessDone);\nexport default __webpack_public_path__ + \"static/media/check-mess-done.b0916a166785b97091e5b97ca80b5e84.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _line;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCheckMess(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 24 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.22175 21.2696L22.3198 9.32297\",\n    stroke: \"#9396AD\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.24224 21.7731L6.99995 19.0047\",\n    stroke: \"#9396AD\",\n    strokeWidth: 2\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.56779 18.3476L19.9999 5.99998\",\n    stroke: \"#9396AD\",\n    strokeWidth: 2\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6.78934,\n    y1: 18.2919,\n    x2: 1.76732,\n    y2: 12.0646,\n    stroke: \"#9396AD\",\n    strokeWidth: 2\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckMess);\nexport default __webpack_public_path__ + \"static/media/check-mess.bee47dd5be7c813310d6a9347fb545f1.svg\";\nexport { ForwardRef as ReactComponent };","import style from './FriendsList.module.css';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport img from '../../../img/user-M.png'\r\nimport { useSelector } from 'react-redux';\r\nimport { doc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport checkDone from '../../../img/check-mess-done.svg'\r\nimport checkMess from '../../../img/check-mess.svg'\r\n\r\n\r\n\r\nexport default function FriendsList({friend}) {\r\n    const {id, name, lastMessages, date, photo, view, friendId, idSender, newMess} = friend\r\n    const myInfo = useSelector(state => state.user)\r\n    const db = getFirestore()\r\n\r\n\r\n    const delViewMess = async () => {\r\n        try{\r\n            await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                [`${id}.viewMessage.newMessView`] :true\r\n                \r\n            })\r\n\r\n            if(friend.users ){\r\n                const usersGroup = Object.entries(friend.users)\r\n                usersGroup.map( async el => {\r\n                    if(el[1].deleted === false && el[0] !== myInfo.id){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${id}.viewMessage.viewMess`]: true \r\n                        })\r\n                    }\r\n                })\r\n            }else{\r\n                if(friend.deleted === false){\r\n                    await updateDoc(doc(db, 'chatsList', friendId), {\r\n                        [`${id}.viewMessage.viewMess`]: true \r\n                    })\r\n                }\r\n            }\r\n            \r\n        } catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n\r\n    const viewMessage = () =>{\r\n        if(!newMess && idSender !== myInfo.id){\r\n            return <div className={classNames(style.viewMess)}>1+</div>\r\n        }\r\n        if(view && idSender === myInfo.id){\r\n            return <img src={checkDone} alt=\"check message done\"></img>\r\n        }\r\n        if(!view && idSender === myInfo.id){\r\n            return <img src={checkMess} alt=\"check message done\"></img>\r\n        }\r\n        return <></>\r\n    }\r\n\r\n\r\n    return (\r\n        <Link onClick={() => delViewMess()} to={id} className={classNames(style.list, 'list-content')}>\r\n            <div className={style.message}>\r\n                <div className={classNames(style.userPhoto, 'user-mess')}>\r\n                    <img src={photo !== null ? photo : img} alt=\"User\" />\r\n                </div>\r\n                <div className={style.userMess}>\r\n                    <p className={classNames(style.name, 'head-name')}>{name}</p>\r\n                    <p className={style.headMess}>{lastMessages === ''? 'No messages': lastMessages}</p>\r\n                </div>\r\n            </div>\r\n            <div className={style.listDateCheck}>\r\n                <div className={classNames(style.date, 'list-date')}>\r\n                    {date}\r\n                </div>\r\n                <div className={classNames(style.check)}>\r\n                    {viewMessage()}\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}"],"names":["FriendsList","friend","id","name","lastMessages","date","photo","view","friendId","idSender","newMess","myInfo","useSelector","state","user","db","getFirestore","delViewMess","updateDoc","doc","users","Object","entries","map","el","deleted","console","error","onClick","to","className","classNames","style","src","img","alt","checkDone","checkMess"],"sourceRoot":""}