{"version":3,"file":"static/js/804.03fe4ba7.chunk.js","mappings":"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","sources":["img/edit.svg","webpack://my-app/./src/Components/MessagesPage/MessagesMain.module.css?8bf6","img/send.svg","state/editMessage.js","img/delete-white.svg","Components/MessagesPage/SendMessages.js","Components/MessagesPage/MessagesField.js","Components/MessagesPage/MessagesMain.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#5C5E6F\",\n    d: \"M9 39h2.2l22.15-22.15-2.2-2.2L9 36.8Zm30.7-24.3-6.4-6.4 2.1-2.1q.85-.85 2.1-.85t2.1.85l2.2 2.2q.85.85.85 2.1t-.85 2.1Zm-2.1 2.1L12.4 42H6v-6.4l25.2-25.2Zm-5.35-1.05-1.1-1.1 2.2 2.2Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.666b6fca3a40a0415e39054d202d0667.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"MessagesMain_header__EMkYa\",\"or\":\"MessagesMain_or__g5wuD\",\"user\":\"MessagesMain_user__TDMJA\",\"userImg\":\"MessagesMain_userImg__Mop0A\",\"name\":\"MessagesMain_name__58IH7\",\"online\":\"MessagesMain_online__FByeQ\",\"dots\":\"MessagesMain_dots__9N9pU\",\"container\":\"MessagesMain_container__c2E6N\",\"input\":\"MessagesMain_input__R5zJ0\",\"send\":\"MessagesMain_send__tKhge\",\"textArea\":\"MessagesMain_textArea__v6811\",\"messages\":\"MessagesMain_messages__eWIbA\",\"empty\":\"MessagesMain_empty__Un+PR\",\"messagesMe\":\"MessagesMain_messagesMe__Go3UK\",\"messagesFriend\":\"MessagesMain_messagesFriend__4kSKR\",\"messageContainerMe\":\"MessagesMain_messageContainerMe__GIXeF\",\"messageContainerFriend\":\"MessagesMain_messageContainerFriend__6diH7\",\"dateMe\":\"MessagesMain_dateMe__XY83U\",\"dateFriend\":\"MessagesMain_dateFriend__Iu9Pj\",\"dateMessages\":\"MessagesMain_dateMessages__HlrtQ\",\"deletedInput\":\"MessagesMain_deletedInput__caMDW\",\"back\":\"MessagesMain_back__-Z3YD\",\"photoSender\":\"MessagesMain_photoSender__ZMI70\",\"imgSenderBlock\":\"MessagesMain_imgSenderBlock__ZJrLC\",\"infoSender\":\"MessagesMain_infoSender__9F9Tj\",\"desactiveName\":\"MessagesMain_desactiveName__KMp2g\",\"nameSender\":\"MessagesMain_nameSender__1ewyf\",\"nameSenderText\":\"MessagesMain_nameSenderText__-gZpe\",\"editIcon\":\"MessagesMain_editIcon__8-EL3\",\"deleteMess\":\"MessagesMain_deleteMess__VEY-a\"};","var _defs, _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#ffffff\",\n    id: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:none;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"send--alt--filled\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"_Transparent_Rectangle_\",\n    \"data-name\": \"<Transparent Rectangle>\",\n    className: \"cls-1\",\n    width: 32,\n    height: 32\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.e6e41f470c70eedfe79bcc21222a7720.svg\";\nexport { ForwardRef as ReactComponent };","export const initialEditMessage = {\r\n    modal:false,\r\n    editMess: {},\r\n    editText: ''\r\n}\r\n\r\n\r\nexport function initEditMessage (initialEditMessage){\r\n    return { \r\n        ...initialEditMessage\r\n    }\r\n}\r\n\r\n\r\nexport function reducerEditMessage(state, action){\r\n    switch(action.type){\r\n        case 'modal':\r\n            return{\r\n                ...state, \r\n                modal: action.payload\r\n            }\r\n        case 'editMess':\r\n            return{\r\n                ...state, \r\n                editMess: action.payload\r\n            }\r\n        case 'editText': \r\n            return{\r\n                ...state,\r\n                editText: action.payload\r\n            }\r\n        case 'init':\r\n            return initEditMessage(action.payload)\r\n    }\r\n}\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDeleteWhite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#E2FFFF\",\n    d: \"M13.05 42q-1.25 0-2.125-.875T10.05 39V10.5H8v-3h9.4V6h13.2v1.5H40v3h-2.05V39q0 1.2-.9 2.1-.9.9-2.1.9Zm21.9-31.5h-21.9V39h21.9Zm-16.6 24.2h3V14.75h-3Zm8.3 0h3V14.75h-3Zm-13.6-24.2V39Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteWhite);\nexport default __webpack_public_path__ + \"static/media/delete-white.775e9dd618f07a57d467dfc4059b0335.svg\";\nexport { ForwardRef as ReactComponent };","import { doc, getDoc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport { useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport send from '../../img/send.svg';\r\nimport style from './MessagesMain.module.css';\r\nimport done from '../../img/done-contact.svg'\r\nimport { deleteMessageStore, editMessage } from '../../store/messagesSlice';\r\nimport { editLastMessageGroup } from '../../store/groupSlice';\r\nimport { editLastMessageFriend } from '../../store/friendSlice';\r\nimport { initialEditMessage } from '../../state/editMessage';\r\nimport deleteMess from '../../img/delete-white.svg'\r\nimport classNames from \"classnames\"\r\n\r\n\r\n\r\n\r\nexport function SendMessages({stateEditMess, setSizeWindow, sendMess, text, setMessageText, handleEvent, innerRef, infoChat}) {\r\n    const myInfo = useSelector(state => state.user)\r\n    const messagesState = useSelector(state => state.message.messages)\r\n    const db = getFirestore()\r\n    const textAreaEdit = useRef()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // console.log(infoChat)\r\n\r\n    useEffect(() =>{\r\n        window.addEventListener(\"resize\", keyboardDidShow )\r\n        function keyboardDidShow() {\r\n            const newHeight = window.visualViewport.height;\r\n            setSizeWindow(newHeight)\r\n        }\r\n        return () =>{\r\n            keyboardDidShow()\r\n        }\r\n    }, [])\r\n\r\n    const delViewMess = async () => {\r\n        try{\r\n            await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                [`${infoChat.id}.viewMessage.newMessView`] :true\r\n                \r\n            })\r\n\r\n            if(infoChat.users ){\r\n                const usersGroup = Object.entries(infoChat.users)\r\n                usersGroup.map( async el => {\r\n                    if(el[1].deleted === false && el[0] !== myInfo.id){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                        })\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                })\r\n            }\r\n            \r\n        } catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        const textArea = textAreaEdit.current\r\n        if(textArea){\r\n            textArea.focus()\r\n        }\r\n\r\n    },[stateEditMess[0].modal])\r\n\r\n\r\n    const setEditMess = async () =>{\r\n        const messageText = stateEditMess[0].editText\r\n        const chatId = infoChat.id\r\n        const messageId = stateEditMess[0].editMess.messageId\r\n\r\n        if(infoChat.lastMessages === messageText || messageText.trim() === ''){\r\n            stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n            \r\n        }else{\r\n            const docSnap = await getDoc(doc(db, 'chats', chatId));\r\n            if (docSnap.exists()){\r\n                const array = docSnap.data().messages;\r\n                const updatedArray = array.map((element) =>{\r\n                    if (element.id === messageId) {\r\n                        dispatch(editMessage({chatId, messageId, messageText}))\r\n                        return { ...element, messageText: messageText };\r\n                    }else{\r\n                        return element;\r\n                    }\r\n                })\r\n\r\n                await updateDoc(doc(db, 'chats', chatId), { messages: updatedArray });\r\n            }\r\n\r\n\r\n            if(infoChat.users){\r\n                const usersArr = Object.entries(infoChat.users)\r\n                usersArr.map(async el =>{\r\n                    if(el[1].deleted === false ){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.lastMessage.messageText`]: messageText \r\n                        })\r\n                        const lastMessages = messageText\r\n                        const combinedId = infoChat.id\r\n                        dispatch(editLastMessageGroup({combinedId, lastMessages}))\r\n\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.lastMessage.messageText`]: messageText \r\n                })\r\n                await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                    [`${infoChat.id}.lastMessage.messageText`] :messageText\r\n                })\r\n                const lastMessages = messageText\r\n                const combinedId = infoChat.id\r\n                dispatch(editLastMessageFriend({combinedId, lastMessages}))\r\n\r\n            }\r\n            stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const deleteMessage = async () =>{\r\n        const chatId = infoChat.id\r\n        const messageId = stateEditMess[0].editMess.messageId\r\n        const userId = myInfo.id\r\n\r\n        dispatch(deleteMessageStore({chatId, messageId, userId}))\r\n        const docSnapChats = await getDoc(doc(db, 'chats', chatId));\r\n\r\n        if (docSnapChats.exists()){\r\n            const array = docSnapChats.data().messages;\r\n            const updatedArray = array.findIndex((element) => element.id === messageId)\r\n            array.splice(updatedArray, 1)\r\n            await updateDoc(doc(db, 'chats', chatId), { messages: array });\r\n        }\r\n\r\n\r\n        const messageStateChat = messagesState.find(el => el.chatId === infoChat.id)\r\n        const newLastMessage = messageStateChat.messages.length >= 2 ? messageStateChat.messages[messageStateChat.messages.length - 2].text : \"No messages\"\r\n        if(messageStateChat.messages[messageStateChat.messages.length - 1].messageId === messageId){\r\n            \r\n            if(infoChat.users){\r\n                const usersArr = Object.entries(infoChat.users)\r\n                usersArr.map(async el =>{\r\n                    if(el[1].deleted === false ){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.lastMessage.messageText`]: newLastMessage \r\n                        })\r\n                        const lastMessages = newLastMessage\r\n                        const combinedId = infoChat.id\r\n                        dispatch(editLastMessageGroup({combinedId, lastMessages}))\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.lastMessage.messageText`]: newLastMessage \r\n                })\r\n                await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                    [`${infoChat.id}.lastMessage.messageText`] :newLastMessage \r\n                })\r\n                const lastMessages = newLastMessage \r\n                const combinedId = infoChat.id\r\n                dispatch(editLastMessageFriend({combinedId, lastMessages}))\r\n            }\r\n            \r\n        }\r\n        stateEditMess[1]({type: 'init', payload:initialEditMessage})\r\n\r\n    } \r\n\r\n    // console.log(infoChat)\r\n\r\n\r\n    return (\r\n        <section className={style.textArea} ref={innerRef}>\r\n            {stateEditMess[0].modal ? \r\n            <>\r\n            <textarea onChange={(e) => stateEditMess[1]({type:'editText', payload:e.target.value})} ref={textAreaEdit} value={stateEditMess[0].editText} onKeyDown={handleEvent} name=\"messages\" id='textareaEdit' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => deleteMessage()} className={classNames(style.send, style.deleteMess)}>\r\n                <img src={deleteMess} alt=\"delete message\" />\r\n            </button>\r\n            <button onClick={() => setEditMess()} className={style.send}>\r\n                <img src={done} alt=\"accept\" />\r\n            </button>\r\n            </>\r\n            :\r\n            <>\r\n            <textarea onClick={() => delViewMess()} placeholder='Enter your message' onKeyDown={handleEvent} value={text} onChange={(e) => setMessageText(e.target.value)} name=\"messages\" id='textarea' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => sendMess()} type='submit' className={style.send}>\r\n                <img src={send} alt=\"Send\" />\r\n            </button>\r\n            </>\r\n            }\r\n\r\n        </section>\r\n    )\r\n}","import classNames from \"classnames\"\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMessage, deleteMessageStore, editMessage, updateNameMessages, updatePhotoMessages } from \"../../store/messagesSlice\";\r\nimport { Empty } from \"../Empty/Empty\";\r\nimport style from './MessagesMain.module.css'\r\nimport img from '../../img/user-M.png'\r\n\r\n\r\n\r\nexport function MessagesField({ setSizeWindow, infoChat, scrollRef, stateEditMess }) {\r\n    const messagesState = useSelector(state => state.message.messages)\r\n    const user = useSelector(state => state.user)\r\n    const findChat = messagesState.find(el => el.chatId === infoChat.id)\r\n    // console.log(friend)\r\n\r\n    const db = getFirestore()\r\n    const dispatch = useDispatch()\r\n    const dayArr = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n\r\n    useEffect(() => {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }, [messagesState])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", setSizeWindow(window.visualViewport.height));\r\n\r\n        return () => window.addEventListener(\"resize\", setSizeWindow(window.visualViewport.height));\r\n    }, [messagesState, window.innerHeight])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, 'chats', infoChat.id), (doc) => {\r\n            if (doc.data()) {\r\n                const data = doc.data()\r\n                const chatId = infoChat.id\r\n\r\n\r\n                if(findChat && findChat.messages){\r\n                    // console.log(data.messages, findChat.messages)\r\n                    if(data.messages.length < findChat.messages.length){\r\n                        for(let i = 0; i < findChat.messages.length; i++){\r\n                            // console.log(data.messages, findChat.messages)\r\n                            if(data.messages[i] === undefined || data.messages.length < findChat.messages.length){\r\n                                console.log('w')\r\n                                const messageId = findChat.messages[i].messageId\r\n                                dispatch(deleteMessageStore({chatId,messageId}))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                data.messages.map(el => {\r\n                    const userId = el.userId\r\n                    const messageText = el.messageText\r\n                    const messageId = el.id\r\n                    const date = el.date\r\n                    const photo = el.photo \r\n                    // console.log(photo)\r\n                    const name = el.name \r\n                    const dayMess = dayArr[date.toDate().getDay()]//\r\n                    const hoursMess = date.toDate().getHours()//\r\n                    let minute = date.toDate().getMinutes().toString()//\r\n                    // console.log(el)\r\n                    if (minute.length === 1) {\r\n                        minute = `0${minute}`\r\n                    }\r\n                    const datePush = `${dayMess} ${hoursMess}:${minute}`\r\n\r\n                    if (findChat && findChat.messages) {\r\n                        const userMess = findChat.messages.find(el => el.messageId === messageId)\r\n                        if(userMess !== undefined && userMess.photo !== undefined && photo !== undefined){//some err \"cant reading undefined of photo\"\r\n                            if (userMess.photo !== photo) {\r\n                                dispatch(updatePhotoMessages({ messageId, chatId, photo }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && userMess.name !== undefined && name !== undefined){//some err \"cant reading undefined of name\"\r\n                            if (userMess.name !== name) {\r\n                                dispatch(updateNameMessages({ messageId, chatId, name }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && messageText !== undefined && userMess.text !== undefined){\r\n                            if(userMess.text !== messageText){\r\n                                dispatch(editMessage({chatId, messageId, messageText}))\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch(addMessage({ name, chatId, userId, messageText, datePush, messageId, photo }))\r\n                })\r\n                \r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [findChat])\r\n\r\n   \r\n    // console.log(messagesState)\r\n    \r\n    const addInfoEdit = (idMess, chat) =>{\r\n        const key = idMess\r\n        const infoChat = chat\r\n        const editMess = infoChat.messages.find(el => el.messageId === key)\r\n        if(editMess){\r\n            stateEditMess[1]({type:'modal', payload:true}) \r\n            stateEditMess[1]({type:'editMess', payload:editMess})\r\n            stateEditMess[1]({type:'editText', payload:editMess.text})\r\n        }\r\n    }\r\n    // console.log(findChat)\r\n    return (\r\n        (messagesState.length > 0 && findChat && findChat.messages.length > 0 ? (findChat.messages.map(el => (\r\n            el.userId === user.id ? (\r\n                <div key={el.messageId} className={style.messageContainerMe}>\r\n                    <span onClick={() => {\r\n                    addInfoEdit(el.messageId, findChat)\r\n                    }} className={classNames(\"message\", style.messagesMe)}>\r\n                        {/* <span className={style.nameSenderText}>{el.name}</span> */}\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateMe)}>{el.date}</span>\r\n\r\n                    </span>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                            <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        </span>\r\n                        {/* <span className={el.photo ? style.desactiveName : style.nameSender}>{el.name}</span> */}\r\n                    </span>\r\n                </div>\r\n            ):(\r\n                <div key={el.messageId} className={style.messageContainerFriend}>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                        </span>\r\n                        <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        {/* <span className={el.photo ? style.desactiveName : style.nameSender}>{el.name}</span> */}\r\n                    </span>\r\n                    <span className={classNames(\"message\", style.messagesFriend)}>\r\n                        {/* <span className={style.nameSenderText}>{el.name}</span> */}\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateFriend)}>{el.date}</span>\r\n                    </span>\r\n\r\n                </div>\r\n            )\r\n        ))): (\r\n            <Empty text={'No Messages'}></Empty>\r\n        ))\r\n    );\r\n}\r\n\r\n\r\n","import { Link, Outlet, Route, Routes, useNavigate, useOutletContext, useParams } from 'react-router-dom';\r\nimport style from './MessagesMain.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useReducer, useRef, useState } from 'react';\r\nimport { SendMessages } from './SendMessages';\r\nimport { arrayUnion, doc, getDoc, getFirestore, onSnapshot, serverTimestamp, Timestamp, updateDoc } from 'firebase/firestore';\r\nimport { v4 as uuid } from 'uuid';\r\nimport img from '../../img/user-M.png'\r\nimport { useEffect } from 'react';\r\nimport { updatePhotoName, viewMessage } from '../../store/friendSlice';\r\nimport back from '../../img/back-dark.svg'\r\nimport { deletedUser, viewMessageGroup } from '../../store/groupSlice';\r\nimport { MessagesField } from './MessagesField';\r\nimport { initialStateGroup, reducerGroup } from '../../state/group';\r\nimport edit from '../../img/edit.svg'\r\nimport { EditMessges } from './EditMessages';\r\nimport { initialEditMessage, reducerEditMessage } from '../../state/editMessage';\r\n\r\n\r\nexport default function MessagesMain() {\r\n    const friend = useSelector(state => state.friend.friend)\r\n    const group = useSelector(state => state.group.group)\r\n    const user = useSelector(state => state.user)\r\n    const navigate = useNavigate()\r\n    // const [editMess, setEditMess] = useState(false)\r\n\r\n    const nameRef = useRef();\r\n    const scrollRef = useRef();\r\n    const footerRef = useRef();\r\n\r\n    const db = getFirestore()\r\n\r\n    const [link] = Object.values(useParams())\r\n    const infoChat = friend.find(el => el.id === link) ? friend.find(el => el.id === link) : group.find(el => el.id === link)\r\n    // console.log(infoChat)\r\n\r\n    const dispatch = useDispatch()\r\n    const [stateGroup, dispatchStateGroup] = useReducer(reducerGroup, initialStateGroup)\r\n    const [editMessage, dispatchEditMessage] = useReducer(reducerEditMessage, initialEditMessage)\r\n\r\n    const [sizeWindow, setSizeWindow] = useState(window.visualViewport.height)//can change for reducer\r\n    const [deletedAcc, setDeletedAcc] = useState(false)\r\n    const [text, setMessageText] = useState('');\r\n\r\n    const sendMess = async () => {\r\n        const messageText = text\r\n        setMessageText('')\r\n\r\n\r\n        if (messageText !== '') {\r\n            const messageId = uuid()\r\n            const date = Timestamp.now()\r\n            // const userIdMess = user.id\r\n\r\n            await updateDoc(doc(db, 'chats', infoChat.id), {\r\n\r\n                messages: arrayUnion({\r\n                    id: messageId,\r\n                    messageText,\r\n                    userId: user.id,\r\n                    date: date,\r\n                    photo: user.photo,\r\n                    name:user.name,\r\n                    deleted:false\r\n                })\r\n            })\r\n\r\n            await updateDoc(doc(db, 'chatsList', user.id), {\r\n                [infoChat.id + '.lastMessage']: {\r\n                    messageText\r\n                },\r\n                [infoChat.id + '.date']: serverTimestamp(),\r\n                [infoChat.id + '.viewMessage']:{\r\n                    newMessView: true,\r\n                    idSender:user.id,\r\n                    viewMess:false\r\n                }\r\n\r\n            })\r\n\r\n            if(infoChat.users){\r\n                for(const key in infoChat.users){\r\n                    const res = await getDoc(doc(db, 'chatsList', key))\r\n                    if (res.exists()) {\r\n                        await updateDoc(doc(db, 'chatsList', key), {\r\n                            [infoChat.id + '.lastMessage']: {\r\n                                messageText\r\n                            },\r\n                            [infoChat.id + '.date']: serverTimestamp(),\r\n                            [infoChat.id + '.viewMessage']:{\r\n                                newMessView: false,\r\n                                idSender:user.id,\r\n                                viewMess:false\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                \r\n           }else{\r\n                const res = await getDoc(doc(db, 'chatsList', infoChat.friendId))\r\n                // console.log('w')\r\n                if (res.exists()) {\r\n                    await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                        [infoChat.id + '.lastMessage']: {\r\n                            messageText\r\n                        },\r\n                        [infoChat.id + '.date']: serverTimestamp(),\r\n                        [infoChat.id + '.viewMessage']:{\r\n                            newMessView: false,\r\n                            idSender:user.id,\r\n                            viewMess:false\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleEvent = (e) => {\r\n\r\n        if (e.code === 'Enter' && e.ctrlKey === false && e.shiftKey === false) {\r\n            e.preventDefault()\r\n            sendMess()\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", user.id), (doc) => {//ERROR update Deleted status\r\n            \r\n            const data = doc.data() ?  Object.entries(doc.data()) : false\r\n            // console.log(\"data\")\r\n            if (data) {\r\n\r\n                const findChat = data.find(el => el[0] === infoChat.id)                    \r\n                const viewMess = findChat && findChat[1].viewMessage\r\n                const view = viewMess && viewMess.viewMess \r\n                const idSender = viewMess && viewMess.idSender \r\n                const newMess = viewMess && viewMess.newMessView\r\n                if (findChat && findChat[1].chat) {\r\n                    // console.log(findChat[1].deleted )\r\n                    const combinedId = findChat[0]\r\n                    const name = findChat[1].name ? findChat[1].name.name : ''\r\n                    const photo = findChat[1].photo.photo\r\n\r\n\r\n                    if (findChat[1].deleted.deleted ) {//change\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(true)\r\n                        return\r\n                    } else {\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(false)\r\n                    }\r\n\r\n                    dispatch(viewMessage({newMess, view,combinedId,idSender}))\r\n                }else if(findChat && findChat[1].group){\r\n                    const combinedId = findChat[0]\r\n                    const usersArr = Object.entries(findChat[1].group.users)\r\n                    const users = findChat[1].group.users\r\n                    const infoUsers = Object.entries(infoChat.users)\r\n                \r\n                    for(let i = 0; i < usersArr.length; i++){\r\n                        if(usersArr[i][1].deleted !== infoUsers[i][1].deleted){\r\n                            dispatch(deletedUser({combinedId, users}))\r\n                        }\r\n\r\n                        if(usersArr[i][1].admin && usersArr[i][1].id === user.id){\r\n                            // console.log(usersArr[i][1])\r\n                            dispatchStateGroup({type: 'admin', payload: true})\r\n                        }\r\n                    }\r\n                    dispatch(viewMessageGroup({newMess, view,combinedId,idSender}))\r\n                }\r\n            }\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [infoChat])\r\n    // console.log(infoChat)\r\n\r\n    useEffect(()=>{\r\n        if (scrollRef.current !== null) {\r\n            const nameHeight = nameRef.current.offsetHeight\r\n            const footerHeight = footerRef.current.offsetHeight\r\n            const windowHeight = window.visualViewport.height\r\n\r\n            const sum = nameHeight + footerHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            scrollRef.current.style.height = `${res}px`\r\n            scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n        }\r\n\r\n    }, [sizeWindow])\r\n\r\n\r\n\r\n    return (\r\n        <section className={style.messagesSec}>\r\n            <div className={classNames(style.container, 'container')}>\r\n                <header className={style.header} ref={nameRef}>\r\n                    <div className={style.user}>\r\n                        {stateGroup.admin && \r\n                        <Link state={infoChat} to='/edit-group'>\r\n                            <img className={style.editIcon} src={edit} alt=\"edit\" />\r\n                        </Link>}\r\n                        <div className={style.userImg}>\r\n                            <img src={infoChat.photo !== null ? infoChat.photo : img} alt=\"User\" />\r\n                        </div>\r\n                        <div className={style.about}>\r\n                            <h2 className={style.name}>\r\n                                {infoChat.name}\r\n                            </h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div onClick={() => {navigate('/')}} className={style.back}>\r\n                        <img src={back} alt=\"back\" />\r\n                    </div>\r\n                </header>\r\n\r\n                <section ref={scrollRef} id='scroll' className={editMessage.modal ? classNames(style.noScroll, style.messages) : style.messages}>\r\n                    <MessagesField stateEditMess={[editMessage, dispatchEditMessage]} setSizeWindow={setSizeWindow} scrollRef={scrollRef} infoChat={infoChat}></MessagesField>\r\n                    \r\n                </section>\r\n                {deletedAcc\r\n                    ?\r\n                    <div ref={footerRef} className={classNames(style.deletedInput)}>Account has been deleted</div>\r\n                    :\r\n                    <SendMessages stateEditMess={[editMessage, dispatchEditMessage]} infoChat={infoChat} scrollRef={scrollRef} setSizeWindow={setSizeWindow}  innerRef={footerRef} handleEvent={handleEvent} sendMess={sendMess} text={text} setMessageText={setMessageText} />\r\n                }\r\n                {/* <EditMessges stateEditMess={[editMessage, dispatchEditMessage]}></EditMessges> */}\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}"],"names":["initialEditMessage","modal","editMess","editText","reducerEditMessage","state","action","type","payload","initEditMessage","SendMessages","stateEditMess","setSizeWindow","sendMess","text","setMessageText","handleEvent","innerRef","infoChat","myInfo","useSelector","user","messagesState","message","messages","db","getFirestore","textAreaEdit","useRef","dispatch","useDispatch","useEffect","keyboardDidShow","newHeight","window","visualViewport","height","addEventListener","delViewMess","updateDoc","doc","id","users","Object","entries","map","el","deleted","friendId","console","error","textArea","current","focus","setEditMess","messageText","chatId","messageId","lastMessages","trim","getDoc","docSnap","exists","array","data","updatedArray","element","editMessage","combinedId","editLastMessageGroup","editLastMessageFriend","deleteMessage","userId","deleteMessageStore","docSnapChats","findIndex","splice","messageStateChat","find","newLastMessage","length","className","style","ref","onChange","e","target","value","onKeyDown","name","rows","onClick","classNames","src","deleteMess","alt","done","placeholder","send","MessagesField","scrollRef","findChat","dayArr","scrollTop","scrollHeight","innerHeight","unsub","onSnapshot","i","undefined","log","date","photo","dayMess","toDate","getDay","hoursMess","getHours","minute","getMinutes","toString","datePush","userMess","updatePhotoMessages","updateNameMessages","addMessage","idMess","chat","key","addInfoEdit","img","Empty","MessagesMain","friend","group","navigate","useNavigate","nameRef","footerRef","values","useParams","link","useReducer","reducerGroup","initialStateGroup","stateGroup","dispatchStateGroup","dispatchEditMessage","useState","sizeWindow","deletedAcc","setDeletedAcc","uuid","Timestamp","arrayUnion","serverTimestamp","newMessView","idSender","viewMess","viewMessage","view","newMess","updatePhotoName","usersArr","infoUsers","deletedUser","admin","viewMessageGroup","nameHeight","offsetHeight","footerHeight","res","to","edit","back","code","ctrlKey","shiftKey","preventDefault"],"sourceRoot":""}