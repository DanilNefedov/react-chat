{"version":3,"file":"static/js/287.df2a2ce4.chunk.js","mappings":"yKACA,EAAuB,sBAAvB,EAAsD,wBAAtD,EAAqH,yBAArH,EAA0J,2BAA1J,EAAqM,+BAArM,EAA2P,sCAA3P,EAAkT,gCAAlT,EAA+V,4B,8JCYzVA,EAAaC,EAAAA,MAAW,kBAAM,6BAAsB,IAEnD,SAASC,EAAO,GAA8C,IAA5CC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAa,EAAbA,cAAeC,EAAS,EAATA,UACnD,GAAoCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,EAAAA,IAAkB,eAAxEC,EAAU,KAAEC,EAAa,KAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAAKC,EAAAA,EAAAA,MACLC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOA,MAAM,IACjDG,GAASF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAME,IAAI,IAC9C,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BD,EAAI,KAAEE,EAAO,KAiBdC,EAAW,yCAAG,6FACmD,OAA7DC,GAAIC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAWZ,EAAI,UAAUa,EAAAA,EAAAA,IAAM,OAAQ,KAAMxB,IAAO,EAAD,iBAGnCyB,EAAAA,EAAAA,IAAQJ,GAAG,KAAD,EAAhCK,EAAa,OACbC,EAAY,GAClBR,EAAQ,IAERO,EAAcE,SAAQ,SAACC,GACnB,IAAMC,EAAOD,EAAIC,OACdA,EAAKC,KAAOf,EAAOe,KAClBvB,EAAc,CAACwB,KAAK,aAAcC,QAAQ3B,EAAAA,KAC1CqB,EAAUO,KAAKJ,GACfX,EAAQQ,GAEhB,IAAG,kDAGHnB,EAAc,CAACwB,KAAK,oBAAqBC,SAAQ,IACjDE,QAAQC,MAAM,EAAD,IAAO,0DAE3B,kBArBgB,mCAyBXC,EAAQ,yCAAG,WAAOC,GAAE,0FAWjB,OAVCC,EAAOD,EAAGC,KACVR,EAAKO,EAAGP,GACRS,EAAQF,EAAGG,SACXC,EAAa1B,EAAOe,GAAKA,EAAKf,EAAOe,GAAKA,EAAKA,EAAKf,EAAOe,GAC3DY,EAAO9B,EAAO8B,MAAK,SAAAL,GAAE,OAAIA,EAAGP,KAAOW,CAAU,IAAC,SAG3CC,IACKC,EAAWb,EACjBtB,GAASoC,EAAAA,EAAAA,IAAU,CAAEH,WAAAA,EAAYH,KAAAA,EAAMK,SAAAA,EAAUJ,MAAAA,MACpD,UACiBM,EAAAA,EAAAA,KAAOjB,EAAAA,EAAAA,IAAIlB,EAAI,QAAS+B,IAAY,OAA7C,UACAK,SAAS,CAAD,kCAEPC,EAAAA,EAAAA,KAAOnB,EAAAA,EAAAA,IAAIlB,EAAI,QAAS+B,GAAa,CAAEO,SAAU,KAAK,0BAEtDC,EAAAA,EAAAA,KAAUrB,EAAAA,EAAAA,IAAIlB,EAAI,YAAaK,EAAOe,KAAG,eAC1CW,EAAa,YAAc,CACxBX,GAAIA,EACJoB,YAAaZ,EACbC,MAAOA,KACV,SACAE,EAAa,SAAUU,EAAAA,EAAAA,OAAiB,IAC3C,0BAEIF,EAAAA,EAAAA,KAAUrB,EAAAA,EAAAA,IAAIlB,EAAI,YAAaoB,IAAG,eACnCW,EAAa,YAAc,CACxBX,GAAIf,EAAOe,GACXoB,YAAanC,EAAOuB,KACpBC,MAAOxB,EAAOwB,SACjB,SACAE,EAAa,SAAUU,EAAAA,EAAAA,OAAiB,IAC3C,QAGN5C,EAAc,CAACwB,KAAK,aAAcC,QAAQ3B,EAAAA,KAAmB,kDAG7DE,EAAc,CAACwB,KAAK,oBAAqBC,SAAQ,IACjDE,QAAQC,MAAM,EAAD,IAAO,0DAE3B,gBA1Ca,sCA4CRiB,GAAUC,EAAAA,EAAAA,MACVC,GAAkBC,EAAAA,EAAAA,UAExB,SAASC,IACL,GAAgC,OAA5BF,EAAgBG,cAAgDC,IAA5BJ,EAAgBG,QAAuB,CAC3E,IAAME,EAAezD,EAAUuD,QAAQG,aACjCC,EAAsBT,EAAQU,OAAOL,QAAQG,aAK7CG,EAJeC,OAAOC,aAEhBN,EAAeE,GAI3BP,EAAgBG,QAAQS,MAAMC,OAAM,UAAMJ,EAAG,KACjD,CACJ,CAYA,OATAK,EAAAA,EAAAA,YAAU,WAGN,OAFAZ,IACAQ,OAAOK,iBAAiB,SAAUb,GAC3B,kBAAMQ,OAAOK,iBAAiB,SAAUb,EAAQ,CAC3D,GAAG,CAACxC,KAMA,iBAAKsD,UAAWC,IAAWL,EAAAA,EAAAA,UAAiB,aAAa,WACrD,oBAASM,IAAKtE,EAAWoE,UAAWJ,EAAAA,EAAAA,OAAcpC,GAAG,SAAQ,UACzD,iBAAKwC,UAAWJ,EAAAA,EAAAA,KAAW,WACvB,kBAAOO,UAAU,SAASH,UAAWC,IAAWL,EAAAA,EAAAA,YAAmBQ,QAAU,SAACC,GAAC,OA7G3E,SAACA,GACjBA,EAAEC,iBACgB,KAAdD,EAAEE,UACF1D,IACAnB,EAAQ,IAEhB,CAuGoG8E,CAAYH,EAAE,EAAEI,MAAOhF,EAAMiF,SAAU,SAACL,GAAC,OAAK3E,EAAQ2E,EAAEM,OAAOF,MAAM,EAAEhD,KAAK,SAASD,GAAIoC,EAAAA,EAAAA,WAAkBgB,YAAY,iBAC3M,mBAAQnD,KAAK,SAASoD,QApHjB,SAACC,GAClBA,EAAMR,iBACN5E,EAAQ,IACRmB,GACJ,EAgH6DmD,UAAWJ,EAAAA,EAAAA,MAAamB,QAAQ,cAAa,UAAC,gBAAKC,IAAKC,EAAAA,EAAQC,IAAI,mBAKzH,oBAAShB,IAAKvE,EAAeqE,UAAWJ,EAAAA,EAAAA,WAAkBpC,GAAG,cAAa,SAEpD,IAAhBd,EAAKyE,QACH,gBAAKnB,UAAWJ,EAAAA,EAAAA,MAAY,SAAC,0BAE7B,gBAAKM,IAAKlB,EAAiBgB,UAAWC,IAAWL,EAAAA,EAAAA,oBAA2B,yBAAyB,UACjG,SAAC,EAAAwB,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAM,IAAW,UAClC,SAAChG,EAAU,CAACoB,KAAMA,EAAM6E,UAAWzD,UAMlD9B,EAAWwF,mBAAoB,SAAC,IAAW,CAAChF,MAAO,CAACR,EAAYC,MAAiC,0BAM9G,CCrJA,IAAMwF,EAAclG,EAAAA,MAAW,kBAAM,6BAAmC,IAGzD,SAASmG,IACpB,IAAM5C,GAAUC,EAAAA,EAAAA,MACV4C,GAAmB1C,EAAAA,EAAAA,UACnB2C,GAAgB3C,EAAAA,EAAAA,UACtB,GAAwBtC,EAAAA,EAAAA,UAAS,IAAG,eAA7BlB,EAAI,KAAEC,EAAO,KACpB,GAAoCG,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,EAAAA,IAAkB,eAAxEC,EAAU,KAAEC,EAAa,KAC1BQ,GAASF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAME,IAAI,IACxCN,GAAKC,EAAAA,EAAAA,MACLH,GAAWC,EAAAA,EAAAA,MACX0F,GAAatF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,OAAOA,MAAM,IACrDwF,GAAS,OAAOD,GAChBE,GAAU9C,EAAAA,EAAAA,UACVrD,GAAYqD,EAAAA,EAAAA,UACZtD,GAAgBsD,EAAAA,EAAAA,UAChB+C,GAAY/C,EAAAA,EAAAA,QAAO,MACnBgD,EAAcnD,EAAQoD,MACtBC,EAAiBrD,EAAQsD,SA4E/B,SAASlD,IACL,GAAiC,OAA7ByC,EAAiBxC,QAAkB,CACnC,IAAMkD,EAAyBV,EAAiBxC,QAAQG,aAClDgD,EAAgBP,EAAQ5C,QAAQG,aAChCC,EAAsBT,EAAQU,OAAOL,QAAQG,aAO7CiD,EAAYF,KANG3C,OAAOC,aAEhB0C,EAAyBC,EAAgB/C,IAMrDoC,EAAiBxC,QAAQS,MAAMC,OAAM,UAAM0C,EAAS,KACxD,CACJ,CA2BA,OAnHAzC,EAAAA,EAAAA,YAAU,WACN,IAAM0C,GAAQC,EAAAA,EAAAA,KAAWnF,EAAAA,EAAAA,IAAIlB,EAAI,YAAaK,EAAOe,KAAK,SAACF,GACnDA,EAAIC,QACSmF,OAAOC,QAAQrF,EAAIC,QAC3BqF,KAAI,SAAA7E,GAEL,IAAMI,EAAaJ,EAAG,GACtB,GAAII,EAAY,CACZ,IAAM0E,EAAW9E,EAAG,GAAG8E,SACjBC,EAAW/E,EAAG,GAAGgF,KAAKC,SACtB3E,EAAWwE,EAASrF,GACpBQ,EAAO6E,EAASjE,YAChBX,EAAQ4E,EAAS5E,MACjBgF,EAAelF,EAAG,GAAGmF,YAAcnF,EAAG,GAAGmF,YAAYC,YAAc,cACnEC,EAAaN,EAASO,UAAYP,EAASO,UAAY,QACvDC,EAAc,IAAIC,KAClBC,EAAa,UAAMV,EAASW,UAAS,YAAIX,EAASY,WAAW,EAAC,YAAIZ,EAASa,eAC3EC,EAAa,UAAMN,EAAYG,UAAS,YAAIH,EAAYI,WAAW,EAAC,YAAIJ,EAAYK,eACtFE,EAASf,EAASgB,aAAaC,WAEb,IAAlBF,EAAO1C,SACP0C,EAAM,WAAOA,IAGjB,IAAMzF,EAAOyD,EAAWzD,MAAK,SAAAL,GAAE,OAAIA,EAAGP,KAAOW,CAAU,IAEvD,GAAGqF,IAAkBI,EAAc,CAC/B,IAAMb,EAAI,UAAMD,EAASkB,WAAU,YAAIH,GAEvC,GAAKzF,GAEE,GAAIA,EAAKgF,aAAeA,EAAY,CACvC,IAAMa,EAAa9F,EACbgF,EAAcF,EACdiB,EAAWnB,EACjB7G,GAASiI,EAAAA,EAAAA,IAAe,CAAEF,WAAAA,EAAYd,YAAAA,EAAae,SAAAA,EAAUd,WAAAA,IAEjE,MAAM,GAAIhF,EAAKJ,OAASA,GAAQI,EAAKH,QAAUA,EAAO,CAClD,IAAMgG,EAAa9F,EACnBjC,GAASkI,EAAAA,EAAAA,IAAgB,CAAEH,WAAAA,EAAYhG,MAAAA,EAAOD,KAAAA,IAClD,OAVI9B,GAASoC,EAAAA,EAAAA,IAAU,CAAEH,WAAAA,EAAYH,KAAAA,EAAM+E,KAAAA,EAAM1E,SAAAA,EAAU+E,WAAAA,EAAYH,aAAAA,EAAchF,MAAAA,IAYzF,KAAM,CACF,IAAM8E,EAAOS,EAEb,GAAKpF,GAEE,GAAIA,EAAKgF,aAAeA,EAAY,CACvC,IAAMa,EAAa9F,EACbgF,EAAcF,EACdiB,EAAWnB,EACjB7G,GAASiI,EAAAA,EAAAA,IAAe,CAAEF,WAAAA,EAAYd,YAAAA,EAAae,SAAAA,EAAUd,WAAAA,IAEjE,MAAM,GAAIhF,EAAKJ,OAASA,GAAQI,EAAKH,QAAUA,EAAO,CAClD,IAAMgG,EAAa9F,EACnBjC,GAASkI,EAAAA,EAAAA,IAAgB,CAAEH,WAAAA,EAAYhG,MAAAA,EAAOD,KAAAA,IAClD,OAVI9B,GAASoC,EAAAA,EAAAA,IAAU,CAAEH,WAAAA,EAAYH,KAAAA,EAAM+E,KAAAA,EAAM1E,SAAAA,EAAU+E,WAAAA,EAAYH,aAAAA,EAAchF,MAAAA,IAWzF,CACJ,CAEJ,IACAhC,EAAc,CAACwB,KAAK,aAAcC,QAAQ3B,EAAAA,MAE1CE,EAAc,CAACwB,KAAK,oBAAqBC,SAAQ,GAIzD,IACA,OAAO,WACH8E,GACJ,CACJ,GAAG,CAACX,KAmBJ/B,EAAAA,EAAAA,YAAU,WAGN,OAFAJ,OAAOK,iBAAiB,SAAUb,GAClCA,IACO,kBAAMQ,OAAOK,iBAAiB,SAAUb,EAAQ,CAC3D,GAAG,CAAC2C,KAGJ/B,EAAAA,EAAAA,YAAU,WACN,IAAMuE,EAAcrC,EAAU7C,QACxBmF,EAAoBxF,EAAQlD,UAAUuD,QACtC0B,EAAU,SAAAR,GACRgE,EAAYE,SAASlE,EAAEM,SACnB2D,EAAkBC,SAASlE,EAAEM,SAC7BwB,GAAe,EAG3B,EAKA,OAHIF,GACAuC,SAASzE,iBAAiB,QAASc,GAEhC,kBAAM2D,SAASC,oBAAoB,QAAS5D,EAAS,CAChE,GAAG,KAIC,qBAASb,UAAU,OAAM,WACrB,gBAAKE,IAAK8B,EAAWhC,UAAWiC,EAAchC,IAAWL,EAAqB,uCAAyCK,IAAWL,EAAqB,kBAAkB,UACrK,SAACpE,EAAM,CAACG,cAAeA,EAAeC,UAAWA,EAAYH,KAAMA,EAAMC,QAASA,OAEtF,oBAASsE,UAAWJ,EAAeM,IAAK0B,EAAc,UAElD,iBAAK5B,UAAWC,IAAWL,EAAiB,aAAa,WACrD,gBAAKM,IAAK6B,EAAS/B,UAAWC,IAAWL,EAAY,QAAQ,UACzD,eAAII,UAAWC,IAAWL,EAAc,UAAU,SAAC,eAIvD,gBAAKM,IAAKyB,EAAkB3B,UAAWJ,EAAqB,UACxD,gBAAKI,UAAWC,IAAWL,GAA4B,UACnD,SAAC,EAAAwB,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAM,IAAW,SAChCO,EAAWV,OAAS,EAClBW,EAAU4C,MAAK,SAACC,EAAEC,GAAC,OAAKA,EAAExB,WAAauB,EAAEvB,UAAU,IAAER,KAAI,SAACtG,GAAM,OAC5D,SAACmF,EAAW,CAAiBnF,OAAQA,GAAnBA,EAAOkB,GAAkC,KAG/D,gBAAKwC,UAAWC,IAAWL,GAAkB,SAAC,oCAQrE5D,EAAWwF,mBAAoB,SAAC,IAAW,CAAChF,MAAO,CAACR,EAAYC,MAAiC,0BAG9G,C,qBCtLA,KAAgB,WAAa,2BAA2B,WAAa,2BAA2B,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,sBAAsB,eAAe,6BAA6B,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,eAAiB,+BAA+B,UAAY,0BAA0B,oBAAsB,oCAAoC,MAAQ,sB","sources":["webpack://my-app/./src/Components/HomePage/Friends.module.css?e856","Components/Search/Search.js","Components/HomePage/Friends.js","webpack://my-app/./src/Components/Search/Search.module.css?a5fe"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"head\":\"Friends_head__z9KAn\",\"header\":\"Friends_header__2vtis\",\"dots\":\"Friends_dots__hKwNl\",\"friends\":\"Friends_friends__RuUv0\",\"container\":\"Friends_container__Ji6-h\",\"searchFriends\":\"Friends_searchFriends__o9ewN\",\"containerFriendsList\":\"Friends_containerFriendsList__ZbZT9\",\"scrollMessages\":\"Friends_scrollMessages__a2NvB\",\"emptyBlock\":\"Friends_emptyBlock__ZwYFc\"};","import search from '../../img/search.svg';\r\nimport style from './Search.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addFrined } from '../../store/friendSlice';\r\nimport { collection, doc, getDoc, getDocs, getFirestore, query, serverTimestamp, setDoc, updateDoc, where } from 'firebase/firestore';\r\nimport { Suspense, useEffect, useReducer, useRef, useState } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ModuleError } from '../ModalError/ModalError';\r\nimport classNames from 'classnames';\r\nimport { Loader } from '../Loader/Loader';\r\nimport React from 'react';\r\nimport { initialStateModal, reducerModal } from '../../state/modalError';\r\n\r\nconst SearchList = React.lazy(() => import('./SearchList'))\r\n\r\nexport function Search({ text, setText, searchListRef, searchRef }) {\r\n    const [stateModal, dispatchModal] = useReducer(reducerModal, initialStateModal)\r\n    const dispatch = useDispatch()\r\n    const db = getFirestore()\r\n    const friend = useSelector(state => state.friend.friend)\r\n    const myInfo = useSelector(state => state.user)\r\n    const [user, setUser] = useState([]) \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setText('')\r\n        searchUsers()\r\n    }  \r\n\r\n    const handleEvent = (e) => {\r\n        e.preventDefault();\r\n        if (e.keyCode === 13) {\r\n            searchUsers()\r\n            setText('')\r\n        }\r\n    }\r\n\r\n\r\n    const searchUsers = async () => {\r\n        const q = query(collection(db, \"users\"), where('name', '==', text));\r\n        \r\n        try {\r\n            const querySnapshot = await getDocs(q);\r\n            const searchArr = []\r\n            setUser([])\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data()\r\n                if(data.id !== myInfo.id){\r\n                    dispatchModal({type:'resetModal', payload:initialStateModal})\r\n                    searchArr.push(data)\r\n                    setUser(searchArr)\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            dispatchModal({type:'activeModalWindow', payload:true})\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const bindChat = async (el) => {\r\n        const name = el.name;\r\n        const id = el.id;\r\n        const photo = el.photoURL\r\n        const combinedId = myInfo.id > id ? myInfo.id + id : id + myInfo.id\r\n        const find = friend.find(el => el.id === combinedId)\r\n\r\n        try {\r\n            if (!find) {\r\n                const friendId = id\r\n                dispatch(addFrined({ combinedId, name, friendId, photo }))\r\n            }\r\n            const res = await getDoc(doc(db, 'chats', combinedId))\r\n            if (!res.exists()) {\r\n\r\n                await setDoc(doc(db, 'chats', combinedId), { messages: [] })\r\n\r\n                await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                    [combinedId + '.userInfo']: {\r\n                        id: id,\r\n                        displayName: name,\r\n                        photo: photo\r\n                    },\r\n                    [combinedId + '.date']: serverTimestamp()\r\n                })\r\n\r\n                await updateDoc(doc(db, 'chatsList', id), {\r\n                    [combinedId + '.userInfo']: {\r\n                        id: myInfo.id,\r\n                        displayName: myInfo.name,\r\n                        photo: myInfo.photo\r\n                    },\r\n                    [combinedId + '.date']: serverTimestamp()\r\n                })\r\n            }\r\n\r\n            dispatchModal({type:'resetModal', payload:initialStateModal})\r\n\r\n        } catch (error) {\r\n            dispatchModal({type:'activeModalWindow', payload:true})\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const context = useOutletContext()\r\n    const containerSearch = useRef()\r\n    \r\n    function resize() {\r\n        if (containerSearch.current !== null && containerSearch.current !== undefined) {\r\n            const searchHeight = searchRef.current.offsetHeight\r\n            const navigationRefHeight = context.navRef.current.offsetHeight\r\n            const windowHeight = window.innerHeight\r\n\r\n            const sum = searchHeight + navigationRefHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            containerSearch.current.style.height = `${res}px`\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        resize()\r\n        window.addEventListener(\"onload\", resize);\r\n        return () => window.addEventListener(\"resize\", resize);\r\n    }, [user])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classNames(style.container, \"container\")}>\r\n            <section ref={searchRef} className={style.search} id=\"search\">\r\n                <div className={style.cont}>\r\n                    <input inputMode='search' className={classNames(style.searchIcon)} onKeyUp={ (e) => handleEvent(e)} value={text} onChange={(e) => setText(e.target.value)} type=\"search\" id={style.searchIcon} placeholder=\"Find friend\" />\r\n                    <button type='submit' onClick={handleSubmit} className={style.loupe} htmlFor=\"search-icon\"><img src={search} alt=\"Search\" /></button>\r\n\r\n                </div>\r\n\r\n            </section>\r\n            <section ref={searchListRef} className={style.searchList} id=\"search-list\">\r\n\r\n                {(user.length === 0) ? (\r\n                    <div className={style.empty}>Search list is empty</div>\r\n                ) : (\r\n                    <div ref={containerSearch} className={classNames(style.containerSearchList, \"container-search-list\")}>\r\n                        <Suspense fallback={<Loader></Loader>}>\r\n                            <SearchList user={user} clickChat={bindChat} />\r\n                        </Suspense>\r\n                    </div>\r\n                )}\r\n\r\n            </section>\r\n            {stateModal.activeModalWindow ? <ModuleError state={[stateModal, dispatchModal]}></ModuleError> : <></>}\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}","import style from './Friends.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Search } from '../Search/Search'\r\nimport { addFrined, addLastMessage, updatePhotoName } from '../../store/friendSlice'\r\nimport React, { Suspense, useReducer, useRef, useState } from 'react';\r\nimport { getFirestore, doc, onSnapshot } from 'firebase/firestore';\r\nimport { useEffect } from 'react';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { ModuleError } from '../ModalError/ModalError';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { initialStateModal, reducerModal } from '../../state/modalError';\r\n\r\n\r\nconst FriendsList = React.lazy(() => import('./FriendsList/FriendsList'))\r\n\r\n\r\nexport default function Friends() {\r\n    const context = useOutletContext()\r\n    const containerFrineds = useRef()\r\n    const friendsScroll = useRef()\r\n    const [text, setText] = useState('')\r\n    const [stateModal, dispatchModal] = useReducer(reducerModal, initialStateModal)\r\n    const myInfo = useSelector(state => state.user)\r\n    const db = getFirestore();\r\n    const dispatch = useDispatch()\r\n    const friendList = useSelector(state => state.friend.friend)\r\n    const sortState = [...friendList]\r\n    const headRef = useRef()\r\n    const searchRef = useRef();\r\n    const searchListRef = useRef();       \r\n    const refSearch = useRef(null)\r\n    const activeModal = context.modal\r\n    const setModalActive = context.setModal\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", myInfo.id), (doc) => {\r\n            if (doc.data()) {\r\n                const data = Object.entries(doc.data())\r\n                data.map(el => {\r\n                    //console.log(el)\r\n                    const combinedId = el[0]\r\n                    if (combinedId) {\r\n                        const userInfo = el[1].userInfo\r\n                        const userDate = el[1].date.toDate()\r\n                        const friendId = userInfo.id\r\n                        const name = userInfo.displayName\r\n                        const photo = userInfo.photo\r\n                        const lastMessages = el[1].lastMessage ? el[1].lastMessage.messageText : 'No messages'\r\n                        const timePublic = userDate.getTime() ? userDate.getTime() : '--:--'\r\n                        const dateUserNow = new Date()\r\n                        const findMyDayBase = `${userDate.getDate()}.${userDate.getMonth()+1}.${userDate.getFullYear()}`\r\n                        const findMyDayUser = `${dateUserNow.getDate()}.${dateUserNow.getMonth()+1}.${dateUserNow.getFullYear()}`\r\n                        let minute = userDate.getMinutes().toString()\r\n\r\n                        if (minute.length === 1) {\r\n                            minute = `0${minute}`\r\n                        }\r\n\r\n                        const find = friendList.find(el => el.id === combinedId)\r\n\r\n                        if(findMyDayBase === findMyDayUser){\r\n                            const date = `${userDate.getHours()}:${minute}`//maybe err in userDate\r\n\r\n                            if (!find) {\r\n                                dispatch(addFrined({ combinedId, name, date, friendId, timePublic, lastMessages, photo }))\r\n                            } else if (find.timePublic !== timePublic) {\r\n                                const friendInfo = combinedId\r\n                                const messageText = lastMessages\r\n                                const datePush = date\r\n                                dispatch(addLastMessage({ friendInfo, messageText, datePush, timePublic }))\r\n\r\n                            }else if (find.name !== name || find.photo !== photo) {\r\n                                const friendInfo = combinedId\r\n                                dispatch(updatePhotoName({ friendInfo, photo, name }))\r\n                            }\r\n\r\n                        }else {\r\n                            const date = findMyDayBase\r\n\r\n                            if (!find) {\r\n                                dispatch(addFrined({ combinedId, name, date, friendId, timePublic, lastMessages, photo }))\r\n                            } else if (find.timePublic !== timePublic) {\r\n                                const friendInfo = combinedId\r\n                                const messageText = lastMessages\r\n                                const datePush = date\r\n                                dispatch(addLastMessage({ friendInfo, messageText, datePush, timePublic }))\r\n\r\n                            }else if (find.name !== name || find.photo !== photo) {\r\n                                const friendInfo = combinedId\r\n                                dispatch(updatePhotoName({ friendInfo, photo, name }))\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                })\r\n                dispatchModal({type:'resetModal', payload:initialStateModal})\r\n            } else {\r\n                dispatchModal({type:'activeModalWindow', payload:true})\r\n                return \r\n            }\r\n\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [friendList]) \r\n\r\n    function resize() {\r\n        if (containerFrineds.current !== null) {\r\n            const containerFrinedsHeight = containerFrineds.current.offsetHeight\r\n            const headRefHeight = headRef.current.offsetHeight\r\n            const navigationRefHeight = context.navRef.current.offsetHeight\r\n            const windowHeight = window.innerHeight\r\n\r\n            const sum = containerFrinedsHeight + headRefHeight + navigationRefHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            const newHeight = containerFrinedsHeight - (-res)\r\n\r\n            containerFrineds.current.style.height = `${newHeight}px`\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", resize);\r\n        resize()\r\n        return () => window.addEventListener(\"resize\", resize);\r\n    }, [friendList])\r\n\r\n\r\n    useEffect(()=>{\r\n        const searchBlock = refSearch.current\r\n        const searchActiveBlock = context.searchRef.current\r\n        const onClick = e => {    \r\n            if(!searchBlock.contains(e.target)){\r\n                if(!searchActiveBlock.contains(e.target)){\r\n                    setModalActive(false)\r\n                }\r\n            } \r\n        }\r\n\r\n        if(!activeModal){\r\n            document.addEventListener('click', onClick);\r\n        }\r\n        return () => document.removeEventListener('click', onClick);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div ref={refSearch} className={activeModal ? classNames(style.searchFriends, \"search-friends, active-modal-search\") : classNames(style.searchFriends, \"search-friends\")}>\r\n                <Search searchListRef={searchListRef} searchRef={searchRef}  text={text} setText={setText}  />\r\n            </div> \r\n            <section className={style.friends} ref={friendsScroll}>\r\n\r\n                <div className={classNames(style.container, 'container')}>\r\n                    <div ref={headRef} className={classNames(style.head, 'head')}>\r\n                        <h2 className={classNames(style.header, 'header')}>\r\n                            Friends\r\n                        </h2>\r\n                    </div>\r\n                    <div ref={containerFrineds} className={style.scrollMessages}>\r\n                        <div className={classNames(style.containerFriendsList)}>\r\n                            <Suspense fallback={<Loader></Loader>}>\r\n                                {(friendList.length > 0 ) ? (\r\n                                    sortState.sort((a,b) => b.timePublic - a.timePublic).map((friend) => ( \r\n                                        <FriendsList key={friend.id} friend={friend}></FriendsList>\r\n                                    ))\r\n                                ):(\r\n                                    <div className={classNames(style.emptyBlock)}>Friend list is empty</div>\r\n                                )}\r\n                            </Suspense>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {stateModal.activeModalWindow ? <ModuleError state={[stateModal, dispatchModal]}></ModuleError> : <></>}\r\n        </section>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchIcon\":\"Search_searchIcon__2+JeP\",\"searchList\":\"Search_searchList__Amjcz\",\"search\":\"Search_search__xXfoW\",\"cont\":\"Search_cont__yR28o\",\"loupe\":\"Search_loupe__ab9N9\",\"list-content\":\"Search_list-content__WxR1l\",\"list\":\"Search_list__iolTq\",\"user\":\"Search_user__bbvWu\",\"name\":\"Search_name__uV342\",\"searchListName\":\"Search_searchListName__4BQqk\",\"container\":\"Search_container__DjhSj\",\"containerSearchList\":\"Search_containerSearchList__v3e9K\",\"empty\":\"Search_empty__RZhOd\"};"],"names":["SearchList","React","Search","text","setText","searchListRef","searchRef","useReducer","reducerModal","initialStateModal","stateModal","dispatchModal","dispatch","useDispatch","db","getFirestore","friend","useSelector","state","myInfo","user","useState","setUser","searchUsers","q","query","collection","where","getDocs","querySnapshot","searchArr","forEach","doc","data","id","type","payload","push","console","error","bindChat","el","name","photo","photoURL","combinedId","find","friendId","addFrined","getDoc","exists","setDoc","messages","updateDoc","displayName","serverTimestamp","context","useOutletContext","containerSearch","useRef","resize","current","undefined","searchHeight","offsetHeight","navigationRefHeight","navRef","res","window","innerHeight","style","height","useEffect","addEventListener","className","classNames","ref","inputMode","onKeyUp","e","preventDefault","keyCode","handleEvent","value","onChange","target","placeholder","onClick","event","htmlFor","src","search","alt","length","Suspense","fallback","Loader","clickChat","activeModalWindow","FriendsList","Friends","containerFrineds","friendsScroll","friendList","sortState","headRef","refSearch","activeModal","modal","setModalActive","setModal","containerFrinedsHeight","headRefHeight","newHeight","unsub","onSnapshot","Object","entries","map","userInfo","userDate","date","toDate","lastMessages","lastMessage","messageText","timePublic","getTime","dateUserNow","Date","findMyDayBase","getDate","getMonth","getFullYear","findMyDayUser","minute","getMinutes","toString","getHours","friendInfo","datePush","addLastMessage","updatePhotoName","searchBlock","searchActiveBlock","contains","document","removeEventListener","sort","a","b"],"sourceRoot":""}