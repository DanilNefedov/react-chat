{"version":3,"file":"static/js/949.971e5e66.chunk.js","mappings":"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","sources":["img/edit.svg","webpack://my-app/./src/Components/MessagesPage/MessagesMain.module.css?8bf6","img/send.svg","Components/MessagesPage/SendMessages.js","Components/MessagesPage/MessagesField.js","Components/MessagesPage/MessagesMain.js"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#5C5E6F\",\n    d: \"M9 39h2.2l22.15-22.15-2.2-2.2L9 36.8Zm30.7-24.3-6.4-6.4 2.1-2.1q.85-.85 2.1-.85t2.1.85l2.2 2.2q.85.85.85 2.1t-.85 2.1Zm-2.1 2.1L12.4 42H6v-6.4l25.2-25.2Zm-5.35-1.05-1.1-1.1 2.2 2.2Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.666b6fca3a40a0415e39054d202d0667.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"MessagesMain_header__EMkYa\",\"or\":\"MessagesMain_or__g5wuD\",\"user\":\"MessagesMain_user__TDMJA\",\"userImg\":\"MessagesMain_userImg__Mop0A\",\"name\":\"MessagesMain_name__58IH7\",\"online\":\"MessagesMain_online__FByeQ\",\"dots\":\"MessagesMain_dots__9N9pU\",\"container\":\"MessagesMain_container__c2E6N\",\"input\":\"MessagesMain_input__R5zJ0\",\"send\":\"MessagesMain_send__tKhge\",\"textArea\":\"MessagesMain_textArea__v6811\",\"messages\":\"MessagesMain_messages__eWIbA\",\"empty\":\"MessagesMain_empty__Un+PR\",\"messagesMe\":\"MessagesMain_messagesMe__Go3UK\",\"messagesFriend\":\"MessagesMain_messagesFriend__4kSKR\",\"messageContainerMe\":\"MessagesMain_messageContainerMe__GIXeF\",\"messageContainerFriend\":\"MessagesMain_messageContainerFriend__6diH7\",\"dateMe\":\"MessagesMain_dateMe__XY83U\",\"dateFriend\":\"MessagesMain_dateFriend__Iu9Pj\",\"dateMessages\":\"MessagesMain_dateMessages__HlrtQ\",\"deletedInput\":\"MessagesMain_deletedInput__caMDW\",\"back\":\"MessagesMain_back__-Z3YD\",\"photoSender\":\"MessagesMain_photoSender__ZMI70\",\"imgSenderBlock\":\"MessagesMain_imgSenderBlock__ZJrLC\",\"infoSender\":\"MessagesMain_infoSender__9F9Tj\",\"desactiveName\":\"MessagesMain_desactiveName__KMp2g\",\"nameSender\":\"MessagesMain_nameSender__1ewyf\",\"nameSenderText\":\"MessagesMain_nameSenderText__-gZpe\",\"editIcon\":\"MessagesMain_editIcon__8-EL3\"};","var _defs, _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#ffffff\",\n    id: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:none;}\"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"send--alt--filled\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.71,4.29a1,1,0,0,0-1.05-.23l-22,8a1,1,0,0,0,0,1.87l8.59,3.43L19.59,11,21,12.41l-6.37,6.37,3.44,8.59A1,1,0,0,0,19,28h0a1,1,0,0,0,.92-.66l8-22A1,1,0,0,0,27.71,4.29Z\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"_Transparent_Rectangle_\",\n    \"data-name\": \"<Transparent Rectangle>\",\n    className: \"cls-1\",\n    width: 32,\n    height: 32\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.e6e41f470c70eedfe79bcc21222a7720.svg\";\nexport { ForwardRef as ReactComponent };","import { doc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport send from '../../img/send.svg';\r\nimport style from './MessagesMain.module.css';\r\n\r\n\r\n\r\nexport function SendMessages({setSizeWindow, sendMess, text, setMessageText, handleEvent, innerRef, infoChat}) {\r\n    const myInfo = useSelector(state => state.user)\r\n    const db = getFirestore()\r\n    // console.log(infoChat)\r\n\r\n    useEffect(() =>{\r\n        window.addEventListener(\"resize\", keyboardDidShow )\r\n        function keyboardDidShow() {\r\n            const newHeight = window.visualViewport.height;\r\n            setSizeWindow(newHeight)\r\n        }\r\n        return () =>{\r\n            keyboardDidShow()\r\n        }\r\n    }, [])\r\n\r\n    const delViewMess = async () => {\r\n        try{\r\n            await updateDoc(doc(db, 'chatsList', myInfo.id), {\r\n                [`${infoChat.id}.viewMessage.newMessView`] :true\r\n                \r\n            })\r\n\r\n            if(infoChat.users ){\r\n                const usersGroup = Object.entries(infoChat.users)\r\n                usersGroup.map( async el => {\r\n                    if(el[1].deleted === false && el[0] !== myInfo.id){\r\n                        await updateDoc(doc(db, 'chatsList', el[0]), {\r\n                            [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                        })\r\n                    }\r\n                })\r\n            }else{\r\n                await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                    [`${infoChat.id}.viewMessage.viewMess`]: true \r\n                })\r\n            }\r\n            \r\n        } catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={style.textArea} ref={innerRef}>\r\n            {/* change click 'Enter your message'onFocus={() => keyboardIsOpen()}*/}\r\n            <textarea onClick={() => delViewMess()} placeholder='Enter your message' onKeyDown={handleEvent} value={text} onChange={(e) => setMessageText(e.target.value)} name=\"messages\" id='textarea' type='text' className={style.input} rows=\"1\" ></textarea>\r\n            <button onClick={() => sendMess()} type='submit' className={style.send}>\r\n                <img src={send} alt=\"Send\" />\r\n            </button>\r\n        </section>\r\n    )\r\n}","import classNames from \"classnames\"\r\nimport { doc, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMessage, updateNameMessages, updatePhotoMessages } from \"../../store/messagesSlice\";\r\nimport { Empty } from \"../Empty/Empty\";\r\nimport style from './MessagesMain.module.css'\r\nimport img from '../../img/user-M.png'\r\n\r\n\r\nexport function MessagesField({ setSizeWindow, infoChat, scrollRef }) {\r\n    const messagesState = useSelector(state => state.message.messages)\r\n    const user = useSelector(state => state.user)\r\n    const findChat = messagesState.find(el => el.chatId === infoChat.id)\r\n    // console.log(friend)\r\n\r\n    const db = getFirestore()\r\n    const dispatch = useDispatch()\r\n    const dayArr = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n\r\n    useEffect(() => {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n    }, [messagesState])\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"onload\", setSizeWindow(window.visualViewport.height));\r\n\r\n        return () => window.addEventListener(\"resize\", setSizeWindow(window.visualViewport.height));\r\n    }, [messagesState, window.innerHeight])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, 'chats', infoChat.id), (doc) => {\r\n            if (doc.data()) {\r\n                const data = doc.data()\r\n                const chatId = infoChat.id\r\n                // console.log(data)\r\n\r\n                data.messages.map(el => {\r\n                    const userId = el.userId\r\n                    const messageText = el.messageText\r\n                    const messageId = el.id\r\n                    const date = el.date\r\n                    const photo = el.photo \r\n                    // console.log(photo)\r\n                    const name = el.name \r\n                    const dayMess = dayArr[date.toDate().getDay()]//\r\n                    const hoursMess = date.toDate().getHours()//\r\n                    let minute = date.toDate().getMinutes().toString()//\r\n                    \r\n                    if (minute.length === 1) {\r\n                        minute = `0${minute}`\r\n                    }\r\n                    const datePush = `${dayMess} ${hoursMess}:${minute}`\r\n\r\n                    if (findChat && findChat.messages) {\r\n                        const userMess = findChat.messages.find(el => el.messageId === messageId)\r\n                        if(userMess !== undefined && userMess.photo !== undefined && photo !== undefined){//some err \"cant reading undefined of photo\"\r\n                            if (userMess.photo !== photo) {\r\n                                dispatch(updatePhotoMessages({ messageId, chatId, photo }))\r\n                            }\r\n                        }\r\n                        \r\n                        if(userMess !== undefined && userMess.name !== undefined && name !== undefined){//some err \"cant reading undefined of name\"\r\n                            if (userMess.name !== name) {\r\n                                dispatch(updateNameMessages({ messageId, chatId, name }))\r\n                            }\r\n                        }\r\n                        \r\n                        \r\n                    }\r\n                    dispatch(addMessage({ name, chatId, userId, messageText, datePush, messageId, photo }))\r\n                })\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [findChat])\r\n    // console.log(findChat)\r\n    \r\n\r\n    return (\r\n\r\n        (messagesState.length > 0 && findChat ? (findChat.messages.map(el => (\r\n            el.userId === user.id ? (\r\n                <div key={el.messageId} className={style.messageContainerMe}>\r\n                    <span className={classNames(\"message\", style.messagesMe)}>\r\n                        {/* <span className={style.nameSenderText}>{el.name}</span> */}\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateMe)}>{el.date}</span>\r\n\r\n                    </span>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                            <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        </span>\r\n                        {/* <span className={el.photo ? style.desactiveName : style.nameSender}>{el.name}</span> */}\r\n                    </span>\r\n                </div>\r\n            ):(\r\n                <div key={el.messageId} className={style.messageContainerFriend}>\r\n                    <span className={style.infoSender}>\r\n                        <span className={style.imgSenderBlock}>\r\n                        </span>\r\n                        <img className={style.photoSender} src={el.photo ? el.photo : img} alt=\"Photo user\" />\r\n                        {/* <span className={el.photo ? style.desactiveName : style.nameSender}>{el.name}</span> */}\r\n                    </span>\r\n                    <span className={classNames(\"message\", style.messagesFriend)}>\r\n                        {/* <span className={style.nameSenderText}>{el.name}</span> */}\r\n                        <span>{el.text}</span>\r\n                        <span className={classNames(style.dateMessages, style.dateFriend)}>{el.date}</span>\r\n                    </span>\r\n\r\n\r\n                </div>\r\n            )\r\n        ))) : (\r\n            <Empty text={'No Messages'}></Empty>\r\n        ))\r\n\r\n    );\r\n}\r\n\r\n\r\n","import { Link, Outlet, Route, Routes, useNavigate, useOutletContext, useParams } from 'react-router-dom';\r\nimport style from './MessagesMain.module.css';\r\nimport classNames from 'classnames';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useReducer, useRef, useState } from 'react';\r\nimport { SendMessages } from './SendMessages';\r\nimport { arrayUnion, doc, getDoc, getFirestore, onSnapshot, serverTimestamp, Timestamp, updateDoc } from 'firebase/firestore';\r\nimport { v4 as uuid } from 'uuid';\r\nimport img from '../../img/user-M.png'\r\nimport { useEffect } from 'react';\r\nimport { updatePhotoName, viewMessage } from '../../store/friendSlice';\r\nimport back from '../../img/back-dark.svg'\r\nimport { deletedUser, viewMessageGroup } from '../../store/groupSlice';\r\nimport { MessagesField } from './MessagesField';\r\nimport { initialStateGroup, reducerGroup } from '../../state/group';\r\nimport edit from '../../img/edit.svg'\r\n\r\n\r\nexport default function MessagesMain() {\r\n    const friend = useSelector(state => state.friend.friend)\r\n    const group = useSelector(state => state.group.group)\r\n    const user = useSelector(state => state.user)\r\n    const navigate = useNavigate()\r\n\r\n    const nameRef = useRef();\r\n    const scrollRef = useRef();\r\n    const footerRef = useRef();\r\n\r\n    const db = getFirestore()\r\n\r\n    const [link] = Object.values(useParams())\r\n    const infoChat = friend.find(el => el.id === link) ? friend.find(el => el.id === link) : group.find(el => el.id === link)\r\n    // console.log(infoChat)\r\n\r\n    const dispatch = useDispatch()\r\n    const [stateGroup, dispatchStateGroup] = useReducer(reducerGroup, initialStateGroup)\r\n\r\n    const [sizeWindow, setSizeWindow] = useState(window.visualViewport.height)//can change for reducer\r\n    const [deletedAcc, setDeletedAcc] = useState(false)\r\n    const [text, setMessageText] = useState('');\r\n\r\n    const sendMess = async () => {\r\n        const messageText = text\r\n        setMessageText('')\r\n\r\n\r\n        if (messageText !== '') {\r\n            const messageId = uuid()\r\n            const date = Timestamp.now()\r\n            // const userIdMess = user.id\r\n\r\n            await updateDoc(doc(db, 'chats', infoChat.id), {\r\n\r\n                messages: arrayUnion({\r\n                    id: messageId,\r\n                    messageText,\r\n                    userId: user.id,\r\n                    date: date,\r\n                    photo: user.photo,\r\n                    name:user.name,\r\n                    deleted:false\r\n                })\r\n            })\r\n\r\n            await updateDoc(doc(db, 'chatsList', user.id), {\r\n                [infoChat.id + '.lastMessage']: {\r\n                    messageText\r\n                },\r\n                [infoChat.id + '.date']: serverTimestamp(),\r\n                [infoChat.id + '.viewMessage']:{\r\n                    newMessView: true,\r\n                    idSender:user.id,\r\n                    viewMess:false\r\n                }\r\n\r\n            })\r\n\r\n            if(infoChat.users){\r\n                for(const key in infoChat.users){\r\n                    const res = await getDoc(doc(db, 'chatsList', key))\r\n                    if (res.exists()) {\r\n                        await updateDoc(doc(db, 'chatsList', key), {\r\n                            [infoChat.id + '.lastMessage']: {\r\n                                messageText\r\n                            },\r\n                            [infoChat.id + '.date']: serverTimestamp(),\r\n                            [infoChat.id + '.viewMessage']:{\r\n                                newMessView: false,\r\n                                idSender:user.id,\r\n                                viewMess:false\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                \r\n           }else{\r\n                const res = await getDoc(doc(db, 'chatsList', infoChat.friendId))\r\n                // console.log('w')\r\n                if (res.exists()) {\r\n                    await updateDoc(doc(db, 'chatsList', infoChat.friendId), {\r\n                        [infoChat.id + '.lastMessage']: {\r\n                            messageText\r\n                        },\r\n                        [infoChat.id + '.date']: serverTimestamp(),\r\n                        [infoChat.id + '.viewMessage']:{\r\n                            newMessView: false,\r\n                            idSender:user.id,\r\n                            viewMess:false\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleEvent = (e) => {\r\n\r\n        if (e.code === 'Enter' && e.ctrlKey === false && e.shiftKey === false) {\r\n            e.preventDefault()\r\n            sendMess()\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"chatsList\", user.id), (doc) => {//ERROR update Deleted status\r\n            \r\n            const data = doc.data() ?  Object.entries(doc.data()) : false\r\n            // console.log(\"data\")\r\n            if (data) {\r\n\r\n                const findChat = data.find(el => el[0] === infoChat.id)                    \r\n                const viewMess = findChat && findChat[1].viewMessage\r\n                const view = viewMess.viewMess \r\n                const idSender = viewMess.idSender \r\n                const newMess = viewMess.newMessView\r\n                if (findChat && findChat[1].chat) {\r\n                    // console.log(findChat[1].deleted )\r\n                    const combinedId = findChat[0]\r\n                    const name = findChat[1].name ? findChat[1].name.name : ''\r\n                    const photo = findChat[1].photo.photo\r\n\r\n\r\n                    if (findChat[1].deleted.deleted ) {//change\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(true)\r\n                        return\r\n                    } else {\r\n                        dispatch(updatePhotoName({ name, photo, combinedId }))\r\n                        setDeletedAcc(false)\r\n                    }\r\n\r\n                    dispatch(viewMessage({newMess, view,combinedId,idSender}))\r\n                }else if(findChat && findChat[1].group){\r\n                    const combinedId = findChat[0]\r\n                    const usersArr = Object.entries(findChat[1].group.users)\r\n                    const users = findChat[1].group.users\r\n                    const infoUsers = Object.entries(infoChat.users)\r\n                \r\n                    for(let i = 0; i < usersArr.length; i++){\r\n                        if(usersArr[i][1].deleted !== infoUsers[i][1].deleted){\r\n                            dispatch(deletedUser({combinedId, users}))\r\n                        }\r\n\r\n                        if(usersArr[i][1].admin && usersArr[i][1].id === user.id){\r\n                            // console.log(usersArr[i][1])\r\n                            dispatchStateGroup({type: 'admin', payload: true})\r\n                        }\r\n                    }\r\n                    dispatch(viewMessageGroup({newMess, view,combinedId,idSender}))\r\n                }\r\n            }\r\n        });\r\n        return () => {\r\n            unsub()\r\n        }\r\n    }, [infoChat])\r\n    // console.log(infoChat)\r\n\r\n    useEffect(()=>{\r\n        if (scrollRef.current !== null) {\r\n            const nameHeight = nameRef.current.offsetHeight\r\n            const footerHeight = footerRef.current.offsetHeight\r\n            const windowHeight = window.visualViewport.height\r\n\r\n            const sum = nameHeight + footerHeight\r\n\r\n            const res = windowHeight - sum\r\n\r\n            scrollRef.current.style.height = `${res}px`\r\n            scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n        }\r\n\r\n    }, [sizeWindow])\r\n\r\n    return (\r\n        <section className={style.messagesSec}>\r\n            <div className={classNames(style.container, 'container')}>\r\n                <header className={style.header} ref={nameRef}>\r\n                    <div className={style.user}>\r\n                        {stateGroup.admin && \r\n                        <Link state={infoChat} to='/edit-group'>\r\n                            <img className={style.editIcon} src={edit} alt=\"edit\" />\r\n                        </Link>}\r\n                        <div className={style.userImg}>\r\n                            <img src={infoChat.photo !== null ? infoChat.photo : img} alt=\"User\" />\r\n                        </div>\r\n                        <div className={style.about}>\r\n                            <h2 className={style.name}>\r\n                                {infoChat.name}\r\n                            </h2>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div onClick={() => {navigate('/')}} className={style.back}>\r\n                        <img src={back} alt=\"back\" />\r\n                    </div>\r\n                </header>\r\n\r\n                <section ref={scrollRef} id='scroll' className={style.messages}>\r\n                    <MessagesField setSizeWindow={setSizeWindow} scrollRef={scrollRef} infoChat={infoChat}></MessagesField>\r\n                </section>\r\n                {deletedAcc\r\n                    ?\r\n                    <div ref={footerRef} className={classNames(style.deletedInput)}>Account has been deleted</div>\r\n                    :\r\n                    <SendMessages infoChat={infoChat} scrollRef={scrollRef} setSizeWindow={setSizeWindow}  innerRef={footerRef} handleEvent={handleEvent} sendMess={sendMess} text={text} setMessageText={setMessageText} />\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}"],"names":["SendMessages","setSizeWindow","sendMess","text","setMessageText","handleEvent","innerRef","infoChat","myInfo","useSelector","state","user","db","getFirestore","useEffect","keyboardDidShow","newHeight","window","visualViewport","height","addEventListener","delViewMess","updateDoc","doc","id","users","Object","entries","map","el","deleted","friendId","console","error","className","style","ref","onClick","placeholder","onKeyDown","value","onChange","e","target","name","type","rows","src","send","alt","MessagesField","scrollRef","messagesState","message","messages","findChat","find","chatId","dispatch","useDispatch","dayArr","current","scrollTop","scrollHeight","innerHeight","unsub","onSnapshot","data","userId","messageText","messageId","date","photo","dayMess","toDate","getDay","hoursMess","getHours","minute","getMinutes","toString","length","datePush","userMess","undefined","updatePhotoMessages","updateNameMessages","addMessage","classNames","img","Empty","MessagesMain","friend","group","navigate","useNavigate","nameRef","useRef","footerRef","values","useParams","link","useReducer","reducerGroup","initialStateGroup","stateGroup","dispatchStateGroup","useState","sizeWindow","deletedAcc","setDeletedAcc","uuid","Timestamp","arrayUnion","serverTimestamp","newMessView","idSender","viewMess","key","getDoc","exists","viewMessage","view","newMess","chat","combinedId","updatePhotoName","usersArr","infoUsers","i","deletedUser","admin","payload","viewMessageGroup","nameHeight","offsetHeight","footerHeight","res","to","edit","back","code","ctrlKey","shiftKey","preventDefault"],"sourceRoot":""}